{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n\n/**\n * @interface kanji\n * @property {string} character - selected kanji character\n * @property {string} url - link to kanji's page on wanikani\n * @property {number} level - level where kanji is introduced\n * @property {string[]} meanings - array of possible meanings\n * @property {number[]} similarIds - array of similar kanji's ids\n */\n\nconst questionSlice = createSlice({\n  name: \"question\",\n  initialState: {\n    kanji: {\n      character: \"\",\n      // selected kanji character\n      url: \"\",\n      level: 0,\n      meanings: [],\n      similarIds: []\n    }\n  },\n  reducers: {\n    setKanji: (state, action) => {\n      state.kanji.character = action.payload.character;\n      state.kanji.url = action.payload.url;\n      state.kanji.level = action.payload.level;\n      state.kanji.meanings = action.payload.meanings;\n      state.kanji.similarIds = action.payload.similarIds;\n    }\n  }\n});\nexport const {\n  setKanji\n} = questionSlice.actions;\nexport default questionSlice.reducer;\n// holds selected kanji, possible answers, answer, etc","map":{"version":3,"names":["createSlice","questionSlice","name","initialState","kanji","character","url","level","meanings","similarIds","reducers","setKanji","state","action","payload","actions","reducer"],"sources":["/Users/smanor/Development/code/personal/wk-similar/src/reducers/QuestionReducer.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n/**\n * @interface kanji\n * @property {string} character - selected kanji character\n * @property {string} url - link to kanji's page on wanikani\n * @property {number} level - level where kanji is introduced\n * @property {string[]} meanings - array of possible meanings\n * @property {number[]} similarIds - array of similar kanji's ids\n */\nexport interface kanji {\n  character: string;\n  url: string;\n  level: number;\n  meanings: string[];\n  similarIds: number[];\n}\n\nconst questionSlice = createSlice({\n  name: \"question\",\n  initialState: {\n    kanji: {\n      character: \"\", // selected kanji character\n      url: \"\",\n      level: 0,\n      meanings: [] as string[],\n      similarIds: [] as number[],\n    },\n  },\n  reducers: {\n    setKanji: (state, action) => {\n      state.kanji.character = action.payload.character;\n      state.kanji.url = action.payload.url;\n      state.kanji.level = action.payload.level;\n      state.kanji.meanings = action.payload.meanings;\n      state.kanji.similarIds = action.payload.similarIds;\n    },\n  },\n});\n\nexport const { setKanji } = questionSlice.actions;\n\nexport default questionSlice.reducer;\n// holds selected kanji, possible answers, answer, etc\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AASA,MAAMC,aAAa,GAAGD,WAAW,CAAC;EAChCE,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZC,KAAK,EAAE;MACLC,SAAS,EAAE,EAAE;MAAE;MACfC,GAAG,EAAE,EAAE;MACPC,KAAK,EAAE,CAAC;MACRC,QAAQ,EAAE,EAAc;MACxBC,UAAU,EAAE;IACd;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACR,KAAK,CAACC,SAAS,GAAGQ,MAAM,CAACC,OAAO,CAACT,SAAS;MAChDO,KAAK,CAACR,KAAK,CAACE,GAAG,GAAGO,MAAM,CAACC,OAAO,CAACR,GAAG;MACpCM,KAAK,CAACR,KAAK,CAACG,KAAK,GAAGM,MAAM,CAACC,OAAO,CAACP,KAAK;MACxCK,KAAK,CAACR,KAAK,CAACI,QAAQ,GAAGK,MAAM,CAACC,OAAO,CAACN,QAAQ;MAC9CI,KAAK,CAACR,KAAK,CAACK,UAAU,GAAGI,MAAM,CAACC,OAAO,CAACL,UAAU;IACpD;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEE;AAAS,CAAC,GAAGV,aAAa,CAACc,OAAO;AAEjD,eAAed,aAAa,CAACe,OAAO;AACpC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}