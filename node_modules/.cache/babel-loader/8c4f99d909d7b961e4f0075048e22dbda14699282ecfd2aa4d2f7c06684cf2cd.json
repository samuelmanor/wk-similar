{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n\n/**\n * @interface Kanji\n *  @property {number} id - selected kanji's id\n * @property {string} character - selected kanji character\n * @property {string} url - link to kanji's page on wanikani\n * @property {number} level - level where kanji is introduced\n * @property {string[]} meanings - array of possible meanings\n * @property {number[]} similarIds - array of similar kanji's ids\n */\n\nconst initialState = {\n  currentKanji: {\n    id: 0,\n    character: \"\",\n    url: \"\",\n    level: 0,\n    meanings: [],\n    similarIds: []\n  },\n  answered: false,\n  correct: null\n};\nconst questionSlice = createSlice({\n  name: \"question\",\n  initialState,\n  reducers: {\n    setKanji: (state, action) => {\n      // state.kanji.id = action.payload.id;\n      // state.kanji.character = action.payload.character;\n      // state.kanji.url = action.payload.url;\n      // state.kanji.level = action.payload.level;\n      // state.kanji.meanings = action.payload.meanings;\n      // state.kanji.similarIds = action.payload.similarIds;\n    },\n    setAnswered: (state, action) => {\n      state.answered = action.payload;\n    },\n    setCorrect: (state, action) => {\n      state.correct = action.payload;\n    }\n  }\n});\nexport const {\n  setKanji,\n  setAnswered,\n  setCorrect\n} = questionSlice.actions;\nexport default questionSlice.reducer;\n// holds selected kanji, possible answers, answer, etc","map":{"version":3,"names":["createSlice","initialState","currentKanji","id","character","url","level","meanings","similarIds","answered","correct","questionSlice","name","reducers","setKanji","state","action","setAnswered","payload","setCorrect","actions","reducer"],"sources":["/Users/smanor/Development/code/personal/wk-similar/src/reducers/QuestionReducer.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n/**\n * @interface Kanji\n *  @property {number} id - selected kanji's id\n * @property {string} character - selected kanji character\n * @property {string} url - link to kanji's page on wanikani\n * @property {number} level - level where kanji is introduced\n * @property {string[]} meanings - array of possible meanings\n * @property {number[]} similarIds - array of similar kanji's ids\n */\nexport interface Kanji {\n  id: number;\n  character: string;\n  url: string;\n  level: number;\n  meanings: string[];\n  similarIds: number[];\n}\n\ninterface QuestionState {\n  currentKanji: Kanji;\n  answered: boolean;\n  correct: boolean | null;\n}\n\nconst initialState: QuestionState = {\n  currentKanji: {\n    id: 0,\n    character: \"\",\n    url: \"\",\n    level: 0,\n    meanings: [],\n    similarIds: [],\n  },\n  answered: false,\n  correct: null,\n};\n\nconst questionSlice = createSlice({\n  name: \"question\",\n  initialState,\n  reducers: {\n    setKanji: (state, action) => {\n      // state.kanji.id = action.payload.id;\n      // state.kanji.character = action.payload.character;\n      // state.kanji.url = action.payload.url;\n      // state.kanji.level = action.payload.level;\n      // state.kanji.meanings = action.payload.meanings;\n      // state.kanji.similarIds = action.payload.similarIds;\n    },\n    setAnswered: (state, action) => {\n      state.answered = action.payload;\n    },\n    setCorrect: (state, action) => {\n      state.correct = action.payload;\n    },\n  },\n});\n\nexport const { setKanji, setAnswered, setCorrect } = questionSlice.actions;\n\nexport default questionSlice.reducer;\n// holds selected kanji, possible answers, answer, etc\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAgBA,MAAMC,YAA2B,GAAG;EAClCC,YAAY,EAAE;IACZC,EAAE,EAAE,CAAC;IACLC,SAAS,EAAE,EAAE;IACbC,GAAG,EAAE,EAAE;IACPC,KAAK,EAAE,CAAC;IACRC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDC,QAAQ,EAAE,KAAK;EACfC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,aAAa,GAAGX,WAAW,CAAC;EAChCY,IAAI,EAAE,UAAU;EAChBX,YAAY;EACZY,QAAQ,EAAE;IACRC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3B;MACA;MACA;MACA;MACA;MACA;IAAA,CACD;IACDC,WAAW,EAAEA,CAACF,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACN,QAAQ,GAAGO,MAAM,CAACE,OAAO;IACjC,CAAC;IACDC,UAAU,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACL,OAAO,GAAGM,MAAM,CAACE,OAAO;IAChC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ,QAAQ;EAAEG,WAAW;EAAEE;AAAW,CAAC,GAAGR,aAAa,CAACS,OAAO;AAE1E,eAAeT,aAAa,CAACU,OAAO;AACpC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}