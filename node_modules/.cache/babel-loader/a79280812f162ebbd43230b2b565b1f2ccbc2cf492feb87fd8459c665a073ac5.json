{"ast":null,"code":"var _jsxFileName = \"/Users/smanor/Development/code/personal/wk-similar/src/components/ModeSelect.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModeSelect = () => {\n  _s();\n  const [selectedMode, setSelectedMode] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-background w-full h-screen flex flex-col justify-center items-center font-body text-text gap-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapse w-1/4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"mode-select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"collapse-title btn\",\n        children: \"setting 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"collapse-content\",\n        children: \"content 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapse btn w-1/4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"mode-select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"collapse-title\",\n        children: \"setting 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"collapse-content\",\n        children: \"content 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapse\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"mode-select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"collapse-title\",\n        children: \"setting 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"collapse-content\",\n        children: \"content 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n// const [showWelcome, setShowWelcome] = useState(true);\n// const [gameInitialized, setGameInitialized] = useState(false);\n// const [availableKanji, setAvailableKanji] = useState(0); // list of kanji objects from the api\n// const [currentKanji, setCurrentKanji] = useState(null); // random kanji object from the api\n// const kanji = useSelector((state) => state.question.kanji); // current valid kanji object from the store\n// const questionAnswered = useSelector((state) => state.question.answered); // if the question has been answered\n\n// const apiKey = useSelector((state) => state.user.apiKey);\n\n// const dispatch = useDispatch();\n\n// /**\n//  * Gets a list of kanji that are available to study\n//  */\n// const getAvailableKanji = () => {\n//   axios\n//     .get(\n//       \"https://api.wanikani.com/v2/assignments?started=true&subject_types=kanji\",\n//       {\n//         headers: {\n//           Authorization: `Bearer ${apiKey}`,\n//         },\n//       }\n//     )\n//     .then((res) => {\n//       // console.log(res.data);\n//       // const totalAvailableKanji = res.data.total_count;\n\n//       if (res.data.total_count > 0) {\n//         setAvailableKanji(res.data.data);\n//         pickRandomKanji(res.data.data);\n//       } else {\n//         console.log(\"no kanji available\");\n//       }\n//     });\n// };\n\n// /**\n//  * Fetches the kanji with the given id\n//  * @param {number} id the id of the kanji to fetch\n//  */\n// const fetchKanji = (id) => {\n//   axios\n//     .get(`https://api.wanikani.com/v2/subjects/${id}`, {\n//       headers: {\n//         Authorization: `Bearer ${apiKey}`,\n//       },\n//     })\n//     .then((res) => {\n//       // console.log(\"fetchkanji\", res.data);\n//       // console.log(res.data.data.visually_similar_subject_ids);\n//       setCurrentKanji({ ...res.data.data, id: res.data.id });\n//     })\n//     .catch((err) => {\n//       console.log(err);\n//     });\n// };\n\n// /**\n//  * Picks a random kanji from the available kanji, then fetches it\n//  * @param {array} data the array of kanji objects to pick from; defaults to {@link availableKanji}\n//  */\n// const pickRandomKanji = (data = availableKanji) => {\n//   const limit = data.length > 500 ? 500 : data.length;\n//   const randomIndex = Math.floor(Math.random() * limit);\n\n//   // console.log(data[randomIndex]);\n//   if (data[randomIndex]?.data !== undefined) {\n//     fetchKanji(data[randomIndex].data.subject_id);\n//   }\n// };\n\n// /**\n//  * Removes the kanji with the given id from the available kanji array\n//  */\n// const removeKanji = (id) => {\n//   setAvailableKanji((prev) => {\n//     const newAvailableKanji = [...prev];\n//     newAvailableKanji.splice(\n//       newAvailableKanji.findIndex((k) => k.data.subject_id === id),\n//       1\n//     );\n//     return newAvailableKanji;\n//   });\n// };\n\n// /**\n//  * Resets the question to the next one\n//  */\n// const nextQuestion = () => {\n//   // pickRandomKanji();\n//   setTimeout(() => {\n//     removeKanji(kanji.id);\n//     dispatch(setAnswered(false));\n//     dispatch(setCorrect(false));\n//   }, 200);\n//   pickRandomKanji();\n// };\n\n// const startGame = () => {\n//   setGameInitialized(true);\n//   getAvailableKanji();\n// };\n_s(ModeSelect, \"0xkNKoDuKbt90s41gA5N0jwRM38=\");\n_c = ModeSelect;\nvar _c;\n$RefreshReg$(_c, \"ModeSelect\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ModeSelect","_s","selectedMode","setSelectedMode","className","children","type","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/smanor/Development/code/personal/wk-similar/src/components/ModeSelect.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { FC } from \"react\";\n\ninterface ModeSelectProps {}\n\nexport const ModeSelect: FC<ModeSelectProps> = () => {\n  const [selectedMode, setSelectedMode] = useState<string | null>(null);\n\n  return (\n    <div className=\"bg-background w-full h-screen flex flex-col justify-center items-center font-body text-text gap-5\">\n      {/* <button\n        className=\"btn bg-pink text-paper\"\n        disabled={selectedMode !== \"level\" && selectedMode !== null}\n        onClick={() => setSelectedMode(\"level\")}\n      >\n        study by level\n      </button>\n      <div className=\"\">expandable</div>\n      <div className=\"divider w-1/3 mx-auto\"></div>\n      <button\n        id=\"srs-mode-btn\"\n        className=\"btn bg-pink text-paper\"\n        disabled={selectedMode !== \"srs\" && selectedMode !== null}\n        onClick={() => setSelectedMode(\"srs\")}\n      >\n        study by srs stage\n      </button>\n      <div className=\"divider w-1/3 mx-auto\"></div>\n      <button\n        className=\"btn bg-pink text-paper\"\n        disabled={selectedMode !== \"random\" && selectedMode !== null}\n        onClick={() => setSelectedMode(\"random\")}\n      >\n        study random\n      </button>\n      <p onClick={() => setSelectedMode(null)}>cancel</p> */}\n      <div className=\"collapse w-1/4\">\n        <input type=\"radio\" name=\"mode-select\" />\n        <div className=\"collapse-title btn\">setting 1</div>\n        <div className=\"collapse-content\">content 1</div>\n      </div>\n      <div className=\"collapse btn w-1/4\">\n        <input type=\"radio\" name=\"mode-select\" />\n        <div className=\"collapse-title\">setting 2</div>\n        <div className=\"collapse-content\">content 2</div>\n      </div>\n      <div className=\"collapse\">\n        <input type=\"radio\" name=\"mode-select\" />\n        <div className=\"collapse-title\">setting 3</div>\n        <div className=\"collapse-content\">content 3</div>\n      </div>\n    </div>\n  );\n};\n\n// const [showWelcome, setShowWelcome] = useState(true);\n// const [gameInitialized, setGameInitialized] = useState(false);\n// const [availableKanji, setAvailableKanji] = useState(0); // list of kanji objects from the api\n// const [currentKanji, setCurrentKanji] = useState(null); // random kanji object from the api\n// const kanji = useSelector((state) => state.question.kanji); // current valid kanji object from the store\n// const questionAnswered = useSelector((state) => state.question.answered); // if the question has been answered\n\n// const apiKey = useSelector((state) => state.user.apiKey);\n\n// const dispatch = useDispatch();\n\n// /**\n//  * Gets a list of kanji that are available to study\n//  */\n// const getAvailableKanji = () => {\n//   axios\n//     .get(\n//       \"https://api.wanikani.com/v2/assignments?started=true&subject_types=kanji\",\n//       {\n//         headers: {\n//           Authorization: `Bearer ${apiKey}`,\n//         },\n//       }\n//     )\n//     .then((res) => {\n//       // console.log(res.data);\n//       // const totalAvailableKanji = res.data.total_count;\n\n//       if (res.data.total_count > 0) {\n//         setAvailableKanji(res.data.data);\n//         pickRandomKanji(res.data.data);\n//       } else {\n//         console.log(\"no kanji available\");\n//       }\n//     });\n// };\n\n// /**\n//  * Fetches the kanji with the given id\n//  * @param {number} id the id of the kanji to fetch\n//  */\n// const fetchKanji = (id) => {\n//   axios\n//     .get(`https://api.wanikani.com/v2/subjects/${id}`, {\n//       headers: {\n//         Authorization: `Bearer ${apiKey}`,\n//       },\n//     })\n//     .then((res) => {\n//       // console.log(\"fetchkanji\", res.data);\n//       // console.log(res.data.data.visually_similar_subject_ids);\n//       setCurrentKanji({ ...res.data.data, id: res.data.id });\n//     })\n//     .catch((err) => {\n//       console.log(err);\n//     });\n// };\n\n// /**\n//  * Picks a random kanji from the available kanji, then fetches it\n//  * @param {array} data the array of kanji objects to pick from; defaults to {@link availableKanji}\n//  */\n// const pickRandomKanji = (data = availableKanji) => {\n//   const limit = data.length > 500 ? 500 : data.length;\n//   const randomIndex = Math.floor(Math.random() * limit);\n\n//   // console.log(data[randomIndex]);\n//   if (data[randomIndex]?.data !== undefined) {\n//     fetchKanji(data[randomIndex].data.subject_id);\n//   }\n// };\n\n// /**\n//  * Removes the kanji with the given id from the available kanji array\n//  */\n// const removeKanji = (id) => {\n//   setAvailableKanji((prev) => {\n//     const newAvailableKanji = [...prev];\n//     newAvailableKanji.splice(\n//       newAvailableKanji.findIndex((k) => k.data.subject_id === id),\n//       1\n//     );\n//     return newAvailableKanji;\n//   });\n// };\n\n// /**\n//  * Resets the question to the next one\n//  */\n// const nextQuestion = () => {\n//   // pickRandomKanji();\n//   setTimeout(() => {\n//     removeKanji(kanji.id);\n//     dispatch(setAnswered(false));\n//     dispatch(setCorrect(false));\n//   }, 200);\n//   pickRandomKanji();\n// };\n\n// const startGame = () => {\n//   setGameInitialized(true);\n//   getAvailableKanji();\n// };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}