{"ast":null,"code":"import { createSlice, current } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n/**\n * @interface Kanji\n *  @property {number} id - selected kanji's id\n * @property {string} character - selected kanji character\n * @property {string} url - link to kanji's page on wanikani\n * @property {number} level - level where kanji is introduced\n * @property {string[]} meanings - array of possible meanings\n * @property {number[]} similarIds - array of similar kanji's ids\n */\n\nconst initialState = {\n  currentKanjiId: 0,\n  answered: false,\n  correct: null,\n  validKanji: []\n};\nconst questionSlice = createSlice({\n  name: \"question\",\n  initialState,\n  reducers: {\n    setCurrentKanjiId: (state, action) => {\n      state.currentKanjiId = action.payload;\n    },\n    setAnswered: (state, action) => {\n      state.answered = action.payload;\n    },\n    setCorrect: (state, action) => {\n      state.correct = action.payload;\n    },\n    setValidKanji: (state, action) => {\n      // state.validKanji = action.payload;\n      if (current(state).validKanji.length === 0) {\n        state.validKanji = action.payload;\n      } else {\n        state.validKanji = [...current(state).validKanji, action.payload];\n      }\n    }\n  }\n});\nexport const {\n  setCurrentKanjiId,\n  setAnswered,\n  setCorrect,\n  setValidKanji\n} = questionSlice.actions;\nexport const initStudyByLevel = (selectedLevels = null, selectedStages = null) => {\n  var _s = $RefreshSig$();\n  return _s(async (dispatch, useState) => {\n    _s();\n    let url = \"https://api.wanikani.com/v2/subjects?types=kanji&started=true\";\n    if (selectedLevels) {\n      url += `&levels=${selectedLevels}`;\n    } else if (selectedStages) {\n      url += `&srs_stages=${selectedStages}`;\n    }\n    console.log(\"url\", url);\n    const apiKey = useState().user.apiKey;\n\n    // recursively fetch all pages of kanji ids\n    const fetchIds = async url => {\n      if (url) {\n        await axios.get(url, {\n          headers: {\n            Authorization: `Bearer ${apiKey}`\n          }\n        }).then(res => {\n          console.log(\"fetched\", res.data);\n\n          // dispatch(\n          //   setValidKanji(\n          //     res.data.data\n          //       .filter(\n          //         (kanji: ReturnedKanjiData) =>\n          //           kanji.data.visually_similar_subject_ids.length > 1\n          //       )\n          //       .map((kanji: ReturnedKanjiData) => {\n          //         return {\n          //           id: kanji.id,\n          //           character: kanji.data.characters,\n          //           url: kanji.url,\n          //           level: kanji.data.level,\n          //           meanings: kanji.data.meanings.map(\n          //             (meaning) => meaning.meaning\n          //           ),\n          //           similarIds: kanji.data.visually_similar_subject_ids,\n          //         };\n          //       })\n          //   )\n          //   // setValidKanji(res.data.data.filter())\n          // );\n\n          if (res.data.pages.per_page > res.data.total_count && res.data.pages.next_url) {\n            console.log(\"fetching next page\");\n            fetchIds(res.data.pages.next_url);\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    };\n    await fetchIds(url);\n  }, \"VhlnxxH3xh7Qs17KADUJ8wvRSZs=\");\n};\nexport default questionSlice.reducer;\n// holds selected kanji, possible answers, answer, etc","map":{"version":3,"names":["createSlice","current","axios","initialState","currentKanjiId","answered","correct","validKanji","questionSlice","name","reducers","setCurrentKanjiId","state","action","payload","setAnswered","setCorrect","setValidKanji","length","actions","initStudyByLevel","selectedLevels","selectedStages","_s","$RefreshSig$","dispatch","useState","url","console","log","apiKey","user","fetchIds","get","headers","Authorization","then","res","data","pages","per_page","total_count","next_url","catch","err","reducer"],"sources":["/Users/smanor/Development/code/personal/wk-similar/src/reducers/QuestionReducer.ts"],"sourcesContent":["import { createSlice, current } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n/**\n * @interface Kanji\n *  @property {number} id - selected kanji's id\n * @property {string} character - selected kanji character\n * @property {string} url - link to kanji's page on wanikani\n * @property {number} level - level where kanji is introduced\n * @property {string[]} meanings - array of possible meanings\n * @property {number[]} similarIds - array of similar kanji's ids\n */\nexport interface Kanji {\n  id: number;\n  character: string;\n  url: string;\n  level: number;\n  meanings: string[];\n  similarIds: number[];\n}\n\ninterface QuestionState {\n  // currentKanji: Kanji;\n  currentKanjiId: number;\n  answered: boolean;\n  correct: boolean | null;\n  validKanji: Kanji[];\n}\n\nconst initialState: QuestionState = {\n  currentKanjiId: 0,\n  answered: false,\n  correct: null,\n  validKanji: [],\n};\n\nconst questionSlice = createSlice({\n  name: \"question\",\n  initialState,\n  reducers: {\n    setCurrentKanjiId: (state, action) => {\n      state.currentKanjiId = action.payload;\n    },\n    setAnswered: (state, action) => {\n      state.answered = action.payload;\n    },\n    setCorrect: (state, action) => {\n      state.correct = action.payload;\n    },\n    setValidKanji: (state, action) => {\n      // state.validKanji = action.payload;\n      if (current(state).validKanji.length === 0) {\n        state.validKanji = action.payload;\n      } else {\n        state.validKanji = [...current(state).validKanji, action.payload];\n      }\n    },\n  },\n});\n\nexport const { setCurrentKanjiId, setAnswered, setCorrect, setValidKanji } =\n  questionSlice.actions;\n\nexport const initStudyByLevel = (\n  selectedLevels: string | null = null,\n  selectedStages: string | null = null\n) => {\n  return async (dispatch: any, useState: any) => {\n    let url = \"https://api.wanikani.com/v2/subjects?types=kanji&started=true\";\n    if (selectedLevels) {\n      url += `&levels=${selectedLevels}`;\n    } else if (selectedStages) {\n      url += `&srs_stages=${selectedStages}`;\n    }\n\n    console.log(\"url\", url);\n    const apiKey = useState().user.apiKey;\n\n    // recursively fetch all pages of kanji ids\n    const fetchIds = async (url: string | null) => {\n      if (url) {\n        await axios\n          .get(url, {\n            headers: {\n              Authorization: `Bearer ${apiKey}`,\n            },\n          })\n          .then((res) => {\n            console.log(\"fetched\", res.data);\n\n            // dispatch(\n            //   setValidKanji(\n            //     res.data.data\n            //       .filter(\n            //         (kanji: ReturnedKanjiData) =>\n            //           kanji.data.visually_similar_subject_ids.length > 1\n            //       )\n            //       .map((kanji: ReturnedKanjiData) => {\n            //         return {\n            //           id: kanji.id,\n            //           character: kanji.data.characters,\n            //           url: kanji.url,\n            //           level: kanji.data.level,\n            //           meanings: kanji.data.meanings.map(\n            //             (meaning) => meaning.meaning\n            //           ),\n            //           similarIds: kanji.data.visually_similar_subject_ids,\n            //         };\n            //       })\n            //   )\n            //   // setValidKanji(res.data.data.filter())\n            // );\n\n            if (\n              res.data.pages.per_page > res.data.total_count &&\n              res.data.pages.next_url\n            ) {\n              console.log(\"fetching next page\");\n              fetchIds(res.data.pages.next_url);\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      }\n    };\n\n    await fetchIds(url);\n  };\n};\n\nexport default questionSlice.reducer;\n// holds selected kanji, possible answers, answer, etc\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}