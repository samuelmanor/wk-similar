{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  apiKey: \"\",\n  level: 0,\n  kanjiIds: []\n};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    setApiKey: (state, action) => {\n      state.apiKey = action.payload;\n    },\n    setLevel: (state, action) => {\n      state.level = action.payload;\n    }\n    // setKanjiIds: (state, action: PayloadAction<Kanji[]>) => {\n    //   state.kanjiIds = action.payload;\n    // },\n  }\n});\nexport const {\n  setApiKey,\n  setLevel\n} = userSlice.actions;\n\n// export const initStudyByLevel = (\n//   selectedLevels: string | null = null,\n//   selectedStages: string | null = null\n// ) => {\n//   return async (dispatch: any, useState: any) => {\n//     let url = \"https://api.wanikani.com/v2/subjects?types=kanji&started=true\";\n//     if (selectedLevels) {\n//       url += `&levels=${selectedLevels}`;\n//     } else if (selectedStages) {\n//       url += `&srs_stages=${selectedStages}`;\n//     }\n\n//     console.log(\"url\", url);\n//     const apiKey = useState().user.apiKey;\n\n//     // recursively fetch all pages of kanji ids\n//     const fetchIds = async (url: string | null) => {\n//       if (url) {\n//         await axios\n//           .get(url, {\n//             headers: {\n//               Authorization: `Bearer ${apiKey}`,\n//             },\n//           })\n//           .then((res) => {\n//             console.log(\"fetched\", res.data);\n\n//             dispatch(\n//               setKanjiIds(\n//                 res.data.data\n//                   .filter(\n//                     (kanji: ReturnedKanjiData) =>\n//                       kanji.data.visually_similar_subject_ids.length > 1\n//                   )\n//                   .map((kanji: ReturnedKanjiData) => {\n//                     return {\n//                       id: kanji.id,\n//                       character: kanji.data.characters,\n//                       url: kanji.url,\n//                       level: kanji.data.level,\n//                       meanings: kanji.data.meanings.map(\n//                         (meaning) => meaning.meaning\n//                       ),\n//                       similarIds: kanji.data.visually_similar_subject_ids,\n//                     };\n//                   })\n//               )\n//             );\n\n//             if (\n//               res.data.pages.per_page > res.data.total_count &&\n//               res.data.pages.next_url\n//             ) {\n//               console.log(\"fetching next page\");\n//               fetchIds(res.data.pages.next_url);\n//             }\n//           })\n//           .catch((err) => {\n//             console.log(err);\n//           });\n//       }\n//     };\n\n//     await fetchIds(url);\n//   };\n// };\n\nexport default userSlice.reducer;\n// holds api token, user stats (accuracy, etc), user settings (theme, etc), user account info (level, etc)","map":{"version":3,"names":["createSlice","initialState","apiKey","level","kanjiIds","userSlice","name","reducers","setApiKey","state","action","payload","setLevel","actions","reducer"],"sources":["/Users/smanor/Development/code/personal/wk-similar/src/reducers/UserReducer.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { Kanji } from \"./QuestionReducer\";\nimport axios from \"axios\";\n\ninterface ReturnedKanjiData {\n  data: {\n    amalgamation_subject_ids: number[];\n    auxiliary_meanings: [\n      {\n        meaning: string;\n        type: string;\n      }\n    ];\n    characters: string;\n    component_subject_ids: number[];\n    created_at: string | null;\n    document_url: string;\n    hidden_at: string | null;\n    lesson_position: number;\n    level: number;\n    meaning_hint: string;\n    meaning_mnemonic: string;\n    meanings: [\n      {\n        meaning: string;\n        primary: boolean;\n        accepted_answer: boolean;\n      }\n    ];\n    reading_hint: string;\n    reading_mnemonic: string;\n    readings: [\n      {\n        reading: string;\n        primary: boolean;\n        accepted_answer: boolean;\n        type: string;\n      }\n    ];\n    slug: string;\n    visually_similar_subject_ids: number[];\n  };\n  data_updated_at: string;\n  id: number;\n  object: \"kanji\";\n  url: string;\n}\n\ninterface UserState {\n  apiKey: string;\n  level: number;\n  kanjiIds: Kanji[];\n}\n\nconst initialState: UserState = {\n  apiKey: \"\",\n  level: 0,\n  kanjiIds: [],\n};\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    setApiKey: (state, action: PayloadAction<string>) => {\n      state.apiKey = action.payload;\n    },\n    setLevel: (state, action: PayloadAction<number>) => {\n      state.level = action.payload;\n    },\n    // setKanjiIds: (state, action: PayloadAction<Kanji[]>) => {\n    //   state.kanjiIds = action.payload;\n    // },\n  },\n});\n\nexport const { setApiKey, setLevel } = userSlice.actions;\n\n// export const initStudyByLevel = (\n//   selectedLevels: string | null = null,\n//   selectedStages: string | null = null\n// ) => {\n//   return async (dispatch: any, useState: any) => {\n//     let url = \"https://api.wanikani.com/v2/subjects?types=kanji&started=true\";\n//     if (selectedLevels) {\n//       url += `&levels=${selectedLevels}`;\n//     } else if (selectedStages) {\n//       url += `&srs_stages=${selectedStages}`;\n//     }\n\n//     console.log(\"url\", url);\n//     const apiKey = useState().user.apiKey;\n\n//     // recursively fetch all pages of kanji ids\n//     const fetchIds = async (url: string | null) => {\n//       if (url) {\n//         await axios\n//           .get(url, {\n//             headers: {\n//               Authorization: `Bearer ${apiKey}`,\n//             },\n//           })\n//           .then((res) => {\n//             console.log(\"fetched\", res.data);\n\n//             dispatch(\n//               setKanjiIds(\n//                 res.data.data\n//                   .filter(\n//                     (kanji: ReturnedKanjiData) =>\n//                       kanji.data.visually_similar_subject_ids.length > 1\n//                   )\n//                   .map((kanji: ReturnedKanjiData) => {\n//                     return {\n//                       id: kanji.id,\n//                       character: kanji.data.characters,\n//                       url: kanji.url,\n//                       level: kanji.data.level,\n//                       meanings: kanji.data.meanings.map(\n//                         (meaning) => meaning.meaning\n//                       ),\n//                       similarIds: kanji.data.visually_similar_subject_ids,\n//                     };\n//                   })\n//               )\n//             );\n\n//             if (\n//               res.data.pages.per_page > res.data.total_count &&\n//               res.data.pages.next_url\n//             ) {\n//               console.log(\"fetching next page\");\n//               fetchIds(res.data.pages.next_url);\n//             }\n//           })\n//           .catch((err) => {\n//             console.log(err);\n//           });\n//       }\n//     };\n\n//     await fetchIds(url);\n//   };\n// };\n\nexport default userSlice.reducer;\n// holds api token, user stats (accuracy, etc), user settings (theme, etc), user account info (level, etc)\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAsD7D,MAAMC,YAAuB,GAAG;EAC9BC,MAAM,EAAE,EAAE;EACVC,KAAK,EAAE,CAAC;EACRC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC5BM,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACRC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAA6B,KAAK;MACnDD,KAAK,CAACP,MAAM,GAAGQ,MAAM,CAACC,OAAO;IAC/B,CAAC;IACDC,QAAQ,EAAEA,CAACH,KAAK,EAAEC,MAA6B,KAAK;MAClDD,KAAK,CAACN,KAAK,GAAGO,MAAM,CAACC,OAAO;IAC9B;IACA;IACA;IACA;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,SAAS;EAAEI;AAAS,CAAC,GAAGP,SAAS,CAACQ,OAAO;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAeR,SAAS,CAACS,OAAO;AAChC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}