{"ast":null,"code":"import { createSlice, current } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  currentKanjiId: 0,\n  answered: false,\n  correct: null,\n  validKanji: []\n};\nconst questionSlice = createSlice({\n  name: \"question\",\n  initialState,\n  reducers: {\n    setCurrentKanjiId: (state, action) => {\n      state.currentKanjiId = action.payload;\n    },\n    setAnswered: (state, action) => {\n      state.answered = action.payload;\n    },\n    setCorrect: (state, action) => {\n      state.correct = action.payload;\n    },\n    setValidKanji: (state, action) => {\n      if (current(state).validKanji.length === 0) {\n        state.validKanji = action.payload;\n      } else {\n        state.validKanji = [...current(state).validKanji, action.payload];\n      }\n    }\n  }\n});\nexport const {\n  setCurrentKanjiId,\n  setAnswered,\n  setCorrect,\n  setValidKanji\n} = questionSlice.actions;\nexport const initStudy = (type, selection) => {\n  var _s = $RefreshSig$();\n  return _s(async (dispatch, useState) => {\n    _s();\n    let url = \"https://api.wanikani.com/v2/subjects?types=kanji&started=true\";\n    // switch (type) {\n    //   case \"level\":\n    //     url += `&levels=${selection}`;\n    //     break;\n    //   case \"srs\":\n    //     url += `&srs_stages=${selection}`;\n    //     break;\n    //   case \"recent\":\n    //     break;\n    //   default:\n    //     break;\n    // }\n    if (type === \"level\") {\n      url += `&levels=${selection}`;\n    } else if (type === \"srs\") {\n      url += `&srs_stages=${selection}`;\n    }\n    const apiKey = useState().user.apiKey;\n\n    // recursively fetch all pages of kanji ids\n    const fetchIds = async url => {\n      if (url) {\n        await axios.get(url, {\n          headers: {\n            Authorization: `Bearer ${apiKey}`\n          }\n        }).then(res => {\n          console.log(\"fetched\", res.data);\n          dispatch(setValidKanji(res.data.data.filter(kanji => kanji.data.visually_similar_subject_ids.length > 1).map(kanji => {\n            return {\n              id: kanji.id,\n              character: kanji.data.characters,\n              url: kanji.url,\n              level: kanji.data.level,\n              meanings: kanji.data.meanings.map(meaning => meaning.meaning),\n              similarIds: kanji.data.visually_similar_subject_ids\n            };\n          })));\n          if (res.data.total_count > res.data.pages.per_page && res.data.pages.next_url) {\n            console.log(\"fetching next page\");\n            fetchIds(res.data.pages.next_url);\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    };\n    await fetchIds(url);\n  }, \"VhlnxxH3xh7Qs17KADUJ8wvRSZs=\");\n};\nexport default questionSlice.reducer;\n// holds selected kanji, possible answers, answer, etc","map":{"version":3,"names":["createSlice","current","axios","initialState","currentKanjiId","answered","correct","validKanji","questionSlice","name","reducers","setCurrentKanjiId","state","action","payload","setAnswered","setCorrect","setValidKanji","length","actions","initStudy","type","selection","_s","$RefreshSig$","dispatch","useState","url","apiKey","user","fetchIds","get","headers","Authorization","then","res","console","log","data","filter","kanji","visually_similar_subject_ids","map","id","character","characters","level","meanings","meaning","similarIds","total_count","pages","per_page","next_url","catch","err","reducer"],"sources":["/Users/smanor/Development/code/personal/wk-similar/src/reducers/QuestionReducer.ts"],"sourcesContent":["import { createSlice, current } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\ninterface ReturnedKanjiData {\n  data: {\n    amalgamation_subject_ids: number[];\n    auxiliary_meanings: [\n      {\n        meaning: string;\n        type: string;\n      }\n    ];\n    characters: string;\n    component_subject_ids: number[];\n    created_at: string | null;\n    document_url: string;\n    hidden_at: string | null;\n    lesson_position: number;\n    level: number;\n    meaning_hint: string;\n    meaning_mnemonic: string;\n    meanings: [\n      {\n        meaning: string;\n        primary: boolean;\n        accepted_answer: boolean;\n      }\n    ];\n    reading_hint: string;\n    reading_mnemonic: string;\n    readings: [\n      {\n        reading: string;\n        primary: boolean;\n        accepted_answer: boolean;\n        type: string;\n      }\n    ];\n    slug: string;\n    visually_similar_subject_ids: number[];\n  };\n  data_updated_at: string;\n  id: number;\n  object: \"kanji\";\n  url: string;\n}\n\nexport interface Kanji {\n  id: number;\n  character: string;\n  url: string;\n  level: number;\n  meanings: string[];\n  similarIds: number[];\n}\n\ninterface QuestionState {\n  currentKanjiId: number;\n  answered: boolean;\n  correct: boolean | null;\n  validKanji: Kanji[];\n}\n\nconst initialState: QuestionState = {\n  currentKanjiId: 0,\n  answered: false,\n  correct: null,\n  validKanji: [],\n};\n\nconst questionSlice = createSlice({\n  name: \"question\",\n  initialState,\n  reducers: {\n    setCurrentKanjiId: (state, action) => {\n      state.currentKanjiId = action.payload;\n    },\n    setAnswered: (state, action) => {\n      state.answered = action.payload;\n    },\n    setCorrect: (state, action) => {\n      state.correct = action.payload;\n    },\n    setValidKanji: (state, action) => {\n      if (current(state).validKanji.length === 0) {\n        state.validKanji = action.payload;\n      } else {\n        state.validKanji = [...current(state).validKanji, action.payload];\n      }\n    },\n  },\n});\n\nexport const { setCurrentKanjiId, setAnswered, setCorrect, setValidKanji } =\n  questionSlice.actions;\n\nexport const initStudy = (\n  type: \"level\" | \"srs\" | \"recent\",\n  selection: string | null\n) => {\n  return async (dispatch: any, useState: any) => {\n    let url = \"https://api.wanikani.com/v2/subjects?types=kanji&started=true\";\n    // switch (type) {\n    //   case \"level\":\n    //     url += `&levels=${selection}`;\n    //     break;\n    //   case \"srs\":\n    //     url += `&srs_stages=${selection}`;\n    //     break;\n    //   case \"recent\":\n    //     break;\n    //   default:\n    //     break;\n    // }\n    if (type === \"level\") {\n      url += `&levels=${selection}`;\n    } else if (type === \"srs\") {\n      url += `&srs_stages=${selection}`;\n    }\n\n    const apiKey = useState().user.apiKey;\n\n    // recursively fetch all pages of kanji ids\n    const fetchIds = async (url: string | null) => {\n      if (url) {\n        await axios\n          .get(url, {\n            headers: {\n              Authorization: `Bearer ${apiKey}`,\n            },\n          })\n          .then((res) => {\n            console.log(\"fetched\", res.data);\n\n            dispatch(\n              setValidKanji(\n                res.data.data\n                  .filter(\n                    (kanji: ReturnedKanjiData) =>\n                      kanji.data.visually_similar_subject_ids.length > 1\n                  )\n                  .map((kanji: ReturnedKanjiData) => {\n                    return {\n                      id: kanji.id,\n                      character: kanji.data.characters,\n                      url: kanji.url,\n                      level: kanji.data.level,\n                      meanings: kanji.data.meanings.map(\n                        (meaning) => meaning.meaning\n                      ),\n                      similarIds: kanji.data.visually_similar_subject_ids,\n                    };\n                  })\n              )\n            );\n\n            if (\n              res.data.total_count > res.data.pages.per_page &&\n              res.data.pages.next_url\n            ) {\n              console.log(\"fetching next page\");\n              fetchIds(res.data.pages.next_url);\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      }\n    };\n\n    await fetchIds(url);\n  };\n};\n\nexport default questionSlice.reducer;\n// holds selected kanji, possible answers, answer, etc\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}