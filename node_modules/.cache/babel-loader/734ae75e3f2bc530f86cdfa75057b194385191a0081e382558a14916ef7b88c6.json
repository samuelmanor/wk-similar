{"ast":null,"code":"var _jsxFileName = \"/Users/smanor/Development/code/personal/wk-similar/src/components/ModeSelect.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModeSelect = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-background w-full h-screen flex flex-col justify-center items-center font-body text-text\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"study by level\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"study by srs stage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"study random\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = ModeSelect;\nconst [showWelcome, setShowWelcome] = useState(true);\nconst [gameInitialized, setGameInitialized] = useState(false);\nconst [availableKanji, setAvailableKanji] = useState(0); // list of kanji objects from the api\nconst [currentKanji, setCurrentKanji] = useState(null); // random kanji object from the api\nconst kanji = useSelector(state => state.question.kanji); // current valid kanji object from the store\nconst questionAnswered = useSelector(state => state.question.answered); // if the question has been answered\n\nconst apiKey = useSelector(state => state.user.apiKey);\nconst dispatch = useDispatch();\n\n/**\n * Gets a list of kanji that are available to study\n */\nconst getAvailableKanji = () => {\n  axios.get(\"https://api.wanikani.com/v2/assignments?started=true&subject_types=kanji\", {\n    headers: {\n      Authorization: `Bearer ${apiKey}`\n    }\n  }).then(res => {\n    // console.log(res.data);\n    // const totalAvailableKanji = res.data.total_count;\n\n    if (res.data.total_count > 0) {\n      setAvailableKanji(res.data.data);\n      pickRandomKanji(res.data.data);\n    } else {\n      console.log(\"no kanji available\");\n    }\n  });\n};\n\n/**\n * Fetches the kanji with the given id\n * @param {number} id the id of the kanji to fetch\n */\nconst fetchKanji = id => {\n  axios.get(`https://api.wanikani.com/v2/subjects/${id}`, {\n    headers: {\n      Authorization: `Bearer ${apiKey}`\n    }\n  }).then(res => {\n    // console.log(\"fetchkanji\", res.data);\n    // console.log(res.data.data.visually_similar_subject_ids);\n    setCurrentKanji({\n      ...res.data.data,\n      id: res.data.id\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\n// /**\n//  * Picks a random kanji from the available kanji, then fetches it\n//  * @param {array} data the array of kanji objects to pick from; defaults to {@link availableKanji}\n//  */\n// const pickRandomKanji = (data = availableKanji) => {\n//   const limit = data.length > 500 ? 500 : data.length;\n//   const randomIndex = Math.floor(Math.random() * limit);\n\n//   // console.log(data[randomIndex]);\n//   if (data[randomIndex]?.data !== undefined) {\n//     fetchKanji(data[randomIndex].data.subject_id);\n//   }\n// };\n\n// /**\n//  * Removes the kanji with the given id from the available kanji array\n//  */\n// const removeKanji = (id) => {\n//   setAvailableKanji((prev) => {\n//     const newAvailableKanji = [...prev];\n//     newAvailableKanji.splice(\n//       newAvailableKanji.findIndex((k) => k.data.subject_id === id),\n//       1\n//     );\n//     return newAvailableKanji;\n//   });\n// };\n\n// /**\n//  * Resets the question to the next one\n//  */\n// const nextQuestion = () => {\n//   // pickRandomKanji();\n//   setTimeout(() => {\n//     removeKanji(kanji.id);\n//     dispatch(setAnswered(false));\n//     dispatch(setCorrect(false));\n//   }, 200);\n//   pickRandomKanji();\n// };\n\n// const startGame = () => {\n//   setGameInitialized(true);\n//   getAvailableKanji();\n// };\nvar _c;\n$RefreshReg$(_c, \"ModeSelect\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ModeSelect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","showWelcome","setShowWelcome","useState","gameInitialized","setGameInitialized","availableKanji","setAvailableKanji","currentKanji","setCurrentKanji","kanji","useSelector","state","question","questionAnswered","answered","apiKey","user","dispatch","useDispatch","getAvailableKanji","axios","get","headers","Authorization","then","res","data","total_count","pickRandomKanji","console","log","fetchKanji","id","catch","err","$RefreshReg$"],"sources":["/Users/smanor/Development/code/personal/wk-similar/src/components/ModeSelect.tsx"],"sourcesContent":["import React from \"react\";\nimport { FC } from \"react\";\n\ninterface ModeSelectProps {}\n\nexport const ModeSelect: FC<ModeSelectProps> = () => {\n  return (\n    <div className=\"bg-background w-full h-screen flex flex-col justify-center items-center font-body text-text\">\n      <p>study by level</p>\n      <p>study by srs stage</p>\n      <p>study random</p>\n    </div>\n  );\n};\n\nconst [showWelcome, setShowWelcome] = useState(true);\nconst [gameInitialized, setGameInitialized] = useState(false);\nconst [availableKanji, setAvailableKanji] = useState(0); // list of kanji objects from the api\nconst [currentKanji, setCurrentKanji] = useState(null); // random kanji object from the api\nconst kanji = useSelector((state) => state.question.kanji); // current valid kanji object from the store\nconst questionAnswered = useSelector((state) => state.question.answered); // if the question has been answered\n\nconst apiKey = useSelector((state) => state.user.apiKey);\n\nconst dispatch = useDispatch();\n\n/**\n * Gets a list of kanji that are available to study\n */\nconst getAvailableKanji = () => {\n  axios\n    .get(\n      \"https://api.wanikani.com/v2/assignments?started=true&subject_types=kanji\",\n      {\n        headers: {\n          Authorization: `Bearer ${apiKey}`,\n        },\n      }\n    )\n    .then((res) => {\n      // console.log(res.data);\n      // const totalAvailableKanji = res.data.total_count;\n\n      if (res.data.total_count > 0) {\n        setAvailableKanji(res.data.data);\n        pickRandomKanji(res.data.data);\n      } else {\n        console.log(\"no kanji available\");\n      }\n    });\n};\n\n/**\n * Fetches the kanji with the given id\n * @param {number} id the id of the kanji to fetch\n */\nconst fetchKanji = (id) => {\n  axios\n    .get(`https://api.wanikani.com/v2/subjects/${id}`, {\n      headers: {\n        Authorization: `Bearer ${apiKey}`,\n      },\n    })\n    .then((res) => {\n      // console.log(\"fetchkanji\", res.data);\n      // console.log(res.data.data.visually_similar_subject_ids);\n      setCurrentKanji({ ...res.data.data, id: res.data.id });\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\n// /**\n//  * Picks a random kanji from the available kanji, then fetches it\n//  * @param {array} data the array of kanji objects to pick from; defaults to {@link availableKanji}\n//  */\n// const pickRandomKanji = (data = availableKanji) => {\n//   const limit = data.length > 500 ? 500 : data.length;\n//   const randomIndex = Math.floor(Math.random() * limit);\n\n//   // console.log(data[randomIndex]);\n//   if (data[randomIndex]?.data !== undefined) {\n//     fetchKanji(data[randomIndex].data.subject_id);\n//   }\n// };\n\n// /**\n//  * Removes the kanji with the given id from the available kanji array\n//  */\n// const removeKanji = (id) => {\n//   setAvailableKanji((prev) => {\n//     const newAvailableKanji = [...prev];\n//     newAvailableKanji.splice(\n//       newAvailableKanji.findIndex((k) => k.data.subject_id === id),\n//       1\n//     );\n//     return newAvailableKanji;\n//   });\n// };\n\n// /**\n//  * Resets the question to the next one\n//  */\n// const nextQuestion = () => {\n//   // pickRandomKanji();\n//   setTimeout(() => {\n//     removeKanji(kanji.id);\n//     dispatch(setAnswered(false));\n//     dispatch(setCorrect(false));\n//   }, 200);\n//   pickRandomKanji();\n// };\n\n// const startGame = () => {\n//   setGameInitialized(true);\n//   getAvailableKanji();\n// };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}