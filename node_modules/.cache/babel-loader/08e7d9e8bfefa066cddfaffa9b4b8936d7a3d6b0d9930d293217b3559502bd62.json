{"ast":null,"code":"import { createSlice, current } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  currentKanji: {\n    id: 0,\n    character: \"\",\n    url: \"\",\n    level: 0,\n    meanings: [],\n    similarIds: []\n  },\n  answered: false,\n  correct: null,\n  validKanji: []\n};\nconst questionSlice = createSlice({\n  name: \"question\",\n  initialState,\n  reducers: {\n    // setCurrentKanjiId: (state, action) => {\n    //   state.currentKanjiId = action.payload;\n    // },\n    setCurrentKanji: (state, action) => {\n      state.currentKanji = action.payload;\n    },\n    setAnswered: (state, action) => {\n      state.answered = action.payload;\n    },\n    setCorrect: (state, action) => {\n      state.correct = action.payload;\n    },\n    setValidKanji: (state, action) => {\n      if (current(state).validKanji.length === 0) {\n        state.validKanji = action.payload;\n      } else {\n        state.validKanji = [...current(state).validKanji, action.payload];\n      }\n    },\n    removeValidKanji: (state, action) => {\n      const index = action.payload;\n      state.validKanji = state.validKanji.splice(index, 1);\n    }\n  }\n});\nexport const {\n  // setCurrentKanjiId,\n  setCurrentKanji,\n  setAnswered,\n  setCorrect,\n  setValidKanji,\n  removeValidKanji\n} = questionSlice.actions;\nexport const pickKanji = () => {\n  var _s = $RefreshSig$();\n  return _s(async (dispatch, useState) => {\n    _s();\n    const validKanji = useState().question.validKanji;\n    const currentKanjiIndex = Math.floor(Math.random() * validKanji.length);\n    console.log(current(validKanji));\n    dispatch(setCurrentKanji(validKanji[currentKanjiIndex]));\n    dispatch(removeValidKanji(currentKanjiIndex));\n  }, \"VhlnxxH3xh7Qs17KADUJ8wvRSZs=\");\n};\nexport const initStudyByLevel = selectedLevels => {\n  var _s2 = $RefreshSig$();\n  return _s2(async (dispatch, useState) => {\n    _s2();\n    const apiKey = useState().user.apiKey;\n\n    // recursively fetch all pages of kanji ids\n    const fetchIds = async url => {\n      if (url) {\n        await axios.get(url, {\n          headers: {\n            Authorization: `Bearer ${apiKey}`\n          }\n        }).then(res => {\n          console.log(\"fetched:\", res.data);\n          dispatch(setValidKanji(res.data.data.filter(kanji => kanji.data.visually_similar_subject_ids.length > 1).map(kanji => {\n            return {\n              id: kanji.id,\n              character: kanji.data.characters,\n              url: kanji.url,\n              level: kanji.data.level,\n              meanings: kanji.data.meanings.map(meaning => meaning.meaning),\n              similarIds: kanji.data.visually_similar_subject_ids\n            };\n          })));\n          if (res.data.total_count > res.data.pages.per_page && res.data.pages.next_url) {\n            console.log(\"fetching next page\");\n            fetchIds(res.data.pages.next_url);\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    };\n    await fetchIds(`https://api.wanikani.com/v2/subjects?types=kanji&started=true&levels=${selectedLevels}`);\n    dispatch(pickKanji());\n  }, \"VhlnxxH3xh7Qs17KADUJ8wvRSZs=\");\n};\nexport const initStudyBySrs = selectedStage => {\n  var _s3 = $RefreshSig$();\n  return _s3(async (dispatch, useState) => {\n    _s3();\n    const apiKey = useState().user.apiKey;\n    // recursively fetch all pages of kanji ids\n    const fetchIds = async url => {\n      if (url) {\n        await axios.get(url, {\n          headers: {\n            Authorization: `Bearer ${apiKey}`\n          }\n        }).then(res => {\n          console.log(\"fetched:\", res.data);\n          dispatch(setValidKanji(res.data.data.filter(kanji => kanji.data.subject_type === \"kanji\").map(kanji => kanji.data.subject_id)));\n          if (res.data.total_count > res.data.pages.per_page && res.data.pages.next_url) {\n            console.log(\"fetching next page\");\n            fetchIds(res.data.pages.next_url);\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    };\n    await fetchIds(`https://api.wanikani.com/v2/assignments?srs_stages=${selectedStage}`);\n    dispatch(pickKanji());\n  }, \"VhlnxxH3xh7Qs17KADUJ8wvRSZs=\");\n};\nexport default questionSlice.reducer;\n// holds selected kanji, possible answers, answer, etc","map":{"version":3,"names":["createSlice","current","axios","initialState","currentKanji","id","character","url","level","meanings","similarIds","answered","correct","validKanji","questionSlice","name","reducers","setCurrentKanji","state","action","payload","setAnswered","setCorrect","setValidKanji","length","removeValidKanji","index","splice","actions","pickKanji","_s","$RefreshSig$","dispatch","useState","question","currentKanjiIndex","Math","floor","random","console","log","initStudyByLevel","selectedLevels","_s2","apiKey","user","fetchIds","get","headers","Authorization","then","res","data","filter","kanji","visually_similar_subject_ids","map","characters","meaning","total_count","pages","per_page","next_url","catch","err","initStudyBySrs","selectedStage","_s3","subject_type","subject_id","reducer"],"sources":["/Users/smanor/Development/code/personal/wk-similar/src/reducers/QuestionReducer.ts"],"sourcesContent":["import { createSlice, current } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\ninterface KanjiSubjectData {\n  data: {\n    amalgamation_subject_ids: number[];\n    auxiliary_meanings: [\n      {\n        meaning: string;\n        type: string;\n      }\n    ];\n    characters: string;\n    component_subject_ids: number[];\n    created_at: string | null;\n    document_url: string;\n    hidden_at: string | null;\n    lesson_position: number;\n    level: number;\n    meaning_hint: string;\n    meaning_mnemonic: string;\n    meanings: [\n      {\n        meaning: string;\n        primary: boolean;\n        accepted_answer: boolean;\n      }\n    ];\n    reading_hint: string;\n    reading_mnemonic: string;\n    readings: [\n      {\n        reading: string;\n        primary: boolean;\n        accepted_answer: boolean;\n        type: string;\n      }\n    ];\n    slug: string;\n    visually_similar_subject_ids: number[];\n  };\n  data_updated_at: string;\n  id: number;\n  object: \"kanji\";\n  url: string;\n}\n\ninterface KanjiAssignmentData {\n  data: {\n    available_at: string | null;\n    burned_at: string | null;\n    created_at: string;\n    hidden: boolean;\n    passed_at: string | null;\n    resurrected_at: string | null;\n    srs_stage: number;\n    started_at: string;\n    subject_id: number;\n    subject_type: string;\n    unlocked_at: string | null;\n  };\n  data_updated_at: string;\n  id: number;\n  object: \"assignment\";\n  url: string;\n}\n\nexport interface Kanji {\n  id: number;\n  character: string;\n  url: string;\n  level: number;\n  meanings: string[];\n  similarIds: number[];\n}\n\ninterface QuestionState {\n  currentKanji: Kanji;\n  answered: boolean;\n  correct: boolean | null;\n  validKanji: Kanji[] | number[]; // kanji[] if level mode, number[] if srs mode\n}\n\nconst initialState: QuestionState = {\n  currentKanji: {\n    id: 0,\n    character: \"\",\n    url: \"\",\n    level: 0,\n    meanings: [],\n    similarIds: [],\n  },\n  answered: false,\n  correct: null,\n  validKanji: [],\n};\n\nconst questionSlice = createSlice({\n  name: \"question\",\n  initialState,\n  reducers: {\n    // setCurrentKanjiId: (state, action) => {\n    //   state.currentKanjiId = action.payload;\n    // },\n    setCurrentKanji: (state, action) => {\n      state.currentKanji = action.payload;\n    },\n    setAnswered: (state, action) => {\n      state.answered = action.payload;\n    },\n    setCorrect: (state, action) => {\n      state.correct = action.payload;\n    },\n    setValidKanji: (state, action) => {\n      if (current(state).validKanji.length === 0) {\n        state.validKanji = action.payload;\n      } else {\n        state.validKanji = [...current(state).validKanji, action.payload];\n      }\n    },\n    removeValidKanji: (state, action) => {\n      const index = action.payload;\n      state.validKanji = state.validKanji.splice(index, 1);\n    },\n  },\n});\n\nexport const {\n  // setCurrentKanjiId,\n  setCurrentKanji,\n  setAnswered,\n  setCorrect,\n  setValidKanji,\n  removeValidKanji,\n} = questionSlice.actions;\n\nexport const pickKanji = () => {\n  return async (dispatch: any, useState: any) => {\n    const validKanji = useState().question.validKanji;\n    const currentKanjiIndex = Math.floor(Math.random() * validKanji.length);\n\n    console.log(current(validKanji));\n\n    dispatch(setCurrentKanji(validKanji[currentKanjiIndex]));\n    dispatch(removeValidKanji(currentKanjiIndex));\n  };\n};\n\nexport const initStudyByLevel = (selectedLevels: string) => {\n  return async (dispatch: any, useState: any) => {\n    const apiKey = useState().user.apiKey;\n\n    // recursively fetch all pages of kanji ids\n    const fetchIds = async (url: string | null) => {\n      if (url) {\n        await axios\n          .get(url, {\n            headers: {\n              Authorization: `Bearer ${apiKey}`,\n            },\n          })\n          .then((res) => {\n            console.log(\"fetched:\", res.data);\n\n            dispatch(\n              setValidKanji(\n                res.data.data\n                  .filter(\n                    (kanji: KanjiSubjectData) =>\n                      kanji.data.visually_similar_subject_ids.length > 1\n                  )\n                  .map((kanji: KanjiSubjectData) => {\n                    return {\n                      id: kanji.id,\n                      character: kanji.data.characters,\n                      url: kanji.url,\n                      level: kanji.data.level,\n                      meanings: kanji.data.meanings.map(\n                        (meaning) => meaning.meaning\n                      ),\n                      similarIds: kanji.data.visually_similar_subject_ids,\n                    };\n                  })\n              )\n            );\n\n            if (\n              res.data.total_count > res.data.pages.per_page &&\n              res.data.pages.next_url\n            ) {\n              console.log(\"fetching next page\");\n              fetchIds(res.data.pages.next_url);\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      }\n    };\n\n    await fetchIds(\n      `https://api.wanikani.com/v2/subjects?types=kanji&started=true&levels=${selectedLevels}`\n    );\n\n    dispatch(pickKanji());\n  };\n};\n\nexport const initStudyBySrs = (selectedStage: string) => {\n  return async (dispatch: any, useState: any) => {\n    const apiKey = useState().user.apiKey;\n    // recursively fetch all pages of kanji ids\n    const fetchIds = async (url: string | null) => {\n      if (url) {\n        await axios\n          .get(url, {\n            headers: {\n              Authorization: `Bearer ${apiKey}`,\n            },\n          })\n          .then((res) => {\n            console.log(\"fetched:\", res.data);\n\n            dispatch(\n              setValidKanji(\n                res.data.data\n                  .filter(\n                    (kanji: KanjiAssignmentData) =>\n                      kanji.data.subject_type === \"kanji\"\n                  )\n                  .map((kanji: KanjiAssignmentData) => kanji.data.subject_id)\n              )\n            );\n\n            if (\n              res.data.total_count > res.data.pages.per_page &&\n              res.data.pages.next_url\n            ) {\n              console.log(\"fetching next page\");\n              fetchIds(res.data.pages.next_url);\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      }\n    };\n    await fetchIds(\n      `https://api.wanikani.com/v2/assignments?srs_stages=${selectedStage}`\n    );\n\n    dispatch(pickKanji());\n  };\n};\n\nexport default questionSlice.reducer;\n// holds selected kanji, possible answers, answer, etc\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}