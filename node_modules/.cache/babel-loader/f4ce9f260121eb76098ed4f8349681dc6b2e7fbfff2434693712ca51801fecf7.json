{"ast":null,"code":"import { createSlice, current } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  currentKanji: {\n    id: 0,\n    character: \"\",\n    url: \"\",\n    level: 0,\n    meanings: [],\n    similarIds: []\n  },\n  currentSimilarKanji: [],\n  answered: false,\n  correct: null,\n  validKanji: []\n};\nconst questionSlice = createSlice({\n  name: \"question\",\n  initialState,\n  reducers: {\n    setCurrentKanji: (state, action) => {\n      // state.currentKanji = action.payload;\n\n      // // remove currentKanji from validKanji\n      // const index = state.validKanji.findIndex((kanji: Kanji | number) =>\n      //   typeof kanji === \"number\"\n      //     ? kanji === action.payload\n      //     : kanji.id === action.payload.id\n      // );\n\n      // state.validKanji = state.validKanji.filter((kanji: Kanji | number) =>\n      //   typeof kanji === \"number\"\n      //     ? kanji !== index\n      //     : kanji.id !== index\n      // );\n\n      // remove previous currentKanji from validKanji, if it exists\n      if (state.validKanji.length > 0) {\n        state.validKanji = state.validKanji.filter(kanji => typeof kanji === \"number\" ? kanji !== state.currentKanji.id : kanji.id !== state.currentKanji.id);\n      }\n      state.currentKanji = action.payload;\n    },\n    setSimilarKanji: (state, action) => {\n      state.currentSimilarKanji = action.payload;\n    },\n    setAnswered: (state, action) => {\n      state.answered = action.payload;\n    },\n    setCorrect: (state, action) => {\n      state.correct = action.payload;\n    },\n    setValidKanji: (state, action) => {\n      if (current(state).validKanji.length === 0) {\n        state.validKanji = action.payload;\n      } else {\n        state.validKanji = [...current(state).validKanji, action.payload];\n      }\n    }\n    // removeValidKanji: (state, action) => {\n    //   const index = action.payload;\n    //   state.validKanji = state.validKanji.splice(index, 1);\n    // },\n  }\n});\nexport const {\n  setCurrentKanji,\n  setSimilarKanji,\n  setAnswered,\n  setCorrect,\n  setValidKanji\n  // removeValidKanji,\n} = questionSlice.actions;\nexport const getSimilarKanji = similarIds => {\n  var _s = $RefreshSig$();\n  return _s(async (dispatch, useState) => {\n    _s();\n    const apiKey = useState().user.apiKey;\n    let ids = [...similarIds]; // copy array\n\n    // if more than 3 similar kanji, pick 3 random ones\n    if (ids.length > 3) {\n      ids.sort(() => Math.random() - 0.5); // randomize array\n      ids = ids.slice(0, 3); // take first 3 elements\n    }\n    let kanjiOptions = [useState().question.currentKanji];\n    const getSimilarKanji = async (id, index) => {\n      await axios.get(`https://api.wanikani.com/v2/subjects/${id}`, {\n        headers: {\n          Authorization: `Bearer ${apiKey}`\n        }\n      }).then(res => {\n        // console.log(res.data, index);\n        const kanji = {\n          id: res.data.id,\n          character: res.data.data.characters,\n          url: res.data.data.document_url,\n          level: res.data.data.level,\n          meanings: res.data.data.meanings.map(meaning => meaning.meaning),\n          similarIds: res.data.data.visually_similar_subject_ids\n        };\n        kanjiOptions = [...kanjiOptions, kanji];\n      });\n    };\n\n    // get similar kanji for each id\n    for (let i = 0; i < ids.length; i++) {\n      await getSimilarKanji(ids[i], i);\n    }\n\n    // randomize kanjiOptions\n    kanjiOptions = kanjiOptions.sort(() => Math.random() - 0.5);\n    dispatch(setSimilarKanji(kanjiOptions));\n  }, \"4eLOaIE0Yl15ohhrrvSgicSmGzk=\");\n};\nexport const pickKanji = () => {\n  var _s2 = $RefreshSig$();\n  return _s2(async (dispatch, useState) => {\n    _s2();\n    let validKanji = useState().question.validKanji;\n    const getRandomKanjiIndex = () => Math.floor(Math.random() * validKanji.length);\n    let currentKanjiIndex = getRandomKanjiIndex();\n    console.log(\"validKanji\", validKanji, currentKanjiIndex);\n    const apiKey = useState().user.apiKey;\n    if (validKanji[currentKanjiIndex].character) {\n      // already have full kanji object\n      dispatch(setCurrentKanji(validKanji[currentKanjiIndex]));\n      dispatch(getSimilarKanji(validKanji[currentKanjiIndex].similarIds));\n    } else {\n      // recursively fetch kanji data until we have a kanji object with visually_similar_subject_ids > 1\n      const fetchKanji = async id => {\n        await axios.get(`https://api.wanikani.com/v2/subjects/${id}`, {\n          headers: {\n            Authorization: `Bearer ${apiKey}`\n          }\n        }).then(res => {\n          console.log(\"fetched:\", res.data);\n          // if kanji has visually_similar_subject_ids > 0, set currentKanji and get similar kanji\n          if (res.data.data.visually_similar_subject_ids.length > 0) {\n            const kanji = {\n              id: res.data.id,\n              character: res.data.data.characters,\n              url: res.data.data.document_url,\n              level: res.data.data.level,\n              meanings: res.data.data.meanings.map(meaning => meaning.meaning),\n              similarIds: res.data.data.visually_similar_subject_ids\n            };\n            dispatch(setCurrentKanji(kanji));\n            dispatch(getSimilarKanji(kanji.similarIds));\n          } else {\n            // if kanji does not have visually_similar_subject_ids > 0, fetch another kanji\n            currentKanjiIndex = getRandomKanjiIndex();\n            console.log(\"fetching another kanji\", currentKanjiIndex, validKanji);\n            // remove currentKanji from validKanji\n            // validKanji = validKanji.filter((kanji: Kanji | number) => {\n            //   return typeof kanji === \"number\"\n            //     ? kanji !== id\n            //     : kanji.id !== id;\n            // });\n            fetchKanji(validKanji[currentKanjiIndex]);\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      };\n      fetchKanji(validKanji[currentKanjiIndex]);\n    }\n  }, \"4eLOaIE0Yl15ohhrrvSgicSmGzk=\");\n};\nexport const answerQuestion = selectedKanji => {\n  var _s3 = $RefreshSig$();\n  return _s3(async (dispatch, useState) => {\n    _s3();\n    const answer = useState().question.currentKanji;\n    dispatch(setAnswered(true));\n    if (selectedKanji.id === answer.id) {\n      dispatch(setCorrect(true));\n    } else {\n      dispatch(setCorrect(false));\n    }\n  }, \"VhlnxxH3xh7Qs17KADUJ8wvRSZs=\");\n};\nexport const nextQuestion = () => {\n  return async dispatch => {\n    // console.log(\"next question 2\");\n    dispatch(setAnswered(false));\n    dispatch(setCorrect(null));\n    dispatch(pickKanji());\n  };\n};\nexport const initStudyByLevel = selectedLevels => {\n  var _s4 = $RefreshSig$();\n  return _s4(async (dispatch, useState) => {\n    _s4();\n    const apiKey = useState().user.apiKey;\n\n    // recursively fetch all pages of kanji ids\n    const fetchIds = async url => {\n      if (url) {\n        await axios.get(url, {\n          headers: {\n            Authorization: `Bearer ${apiKey}`\n          }\n        }).then(res => {\n          console.log(\"fetched:\", res.data);\n          dispatch(setValidKanji(res.data.data.filter(kanji => kanji.data.visually_similar_subject_ids.length > 1).map(kanji => {\n            return {\n              id: kanji.id,\n              character: kanji.data.characters,\n              url: kanji.url,\n              level: kanji.data.level,\n              meanings: kanji.data.meanings.map(meaning => meaning.meaning),\n              similarIds: kanji.data.visually_similar_subject_ids\n            };\n          })));\n          if (res.data.total_count > res.data.pages.per_page && res.data.pages.next_url) {\n            console.log(\"fetching next page\");\n            fetchIds(res.data.pages.next_url);\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    };\n    await fetchIds(`https://api.wanikani.com/v2/subjects?types=kanji&started=true&levels=${selectedLevels}`);\n    dispatch(pickKanji());\n  }, \"VhlnxxH3xh7Qs17KADUJ8wvRSZs=\");\n};\nexport const initStudyBySrs = selectedStage => {\n  var _s5 = $RefreshSig$();\n  return _s5(async (dispatch, useState) => {\n    _s5();\n    const apiKey = useState().user.apiKey;\n    // recursively fetch all pages of kanji ids\n    const fetchIds = async url => {\n      if (url) {\n        await axios.get(url, {\n          headers: {\n            Authorization: `Bearer ${apiKey}`\n          }\n        }).then(res => {\n          console.log(\"fetched:\", res.data);\n          dispatch(setValidKanji(res.data.data.filter(kanji => kanji.data.subject_type === \"kanji\").map(kanji => kanji.data.subject_id)));\n          if (res.data.total_count > res.data.pages.per_page && res.data.pages.next_url) {\n            console.log(\"fetching next page\");\n            fetchIds(res.data.pages.next_url);\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    };\n    await fetchIds(`https://api.wanikani.com/v2/assignments?srs_stages=${selectedStage}`);\n    dispatch(pickKanji());\n  }, \"VhlnxxH3xh7Qs17KADUJ8wvRSZs=\");\n};\nexport default questionSlice.reducer;\n// holds selected kanji, possible answers, answer, etc","map":{"version":3,"names":["createSlice","current","axios","initialState","currentKanji","id","character","url","level","meanings","similarIds","currentSimilarKanji","answered","correct","validKanji","questionSlice","name","reducers","setCurrentKanji","state","action","length","filter","kanji","payload","setSimilarKanji","setAnswered","setCorrect","setValidKanji","actions","getSimilarKanji","_s","$RefreshSig$","dispatch","useState","apiKey","user","ids","sort","Math","random","slice","kanjiOptions","question","index","get","headers","Authorization","then","res","data","characters","document_url","map","meaning","visually_similar_subject_ids","i","pickKanji","_s2","getRandomKanjiIndex","floor","currentKanjiIndex","console","log","fetchKanji","catch","err","answerQuestion","selectedKanji","_s3","answer","nextQuestion","initStudyByLevel","selectedLevels","_s4","fetchIds","total_count","pages","per_page","next_url","initStudyBySrs","selectedStage","_s5","subject_type","subject_id","reducer"],"sources":["/Users/smanor/Development/code/personal/wk-similar/src/reducers/QuestionReducer.ts"],"sourcesContent":["import { createSlice, current } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\ninterface KanjiSubjectData {\n  data: {\n    amalgamation_subject_ids: number[];\n    auxiliary_meanings: [\n      {\n        meaning: string;\n        type: string;\n      }\n    ];\n    characters: string;\n    component_subject_ids: number[];\n    created_at: string | null;\n    document_url: string;\n    hidden_at: string | null;\n    lesson_position: number;\n    level: number;\n    meaning_hint: string;\n    meaning_mnemonic: string;\n    meanings: [\n      {\n        meaning: string;\n        primary: boolean;\n        accepted_answer: boolean;\n      }\n    ];\n    reading_hint: string;\n    reading_mnemonic: string;\n    readings: [\n      {\n        reading: string;\n        primary: boolean;\n        accepted_answer: boolean;\n        type: string;\n      }\n    ];\n    slug: string;\n    visually_similar_subject_ids: number[];\n  };\n  data_updated_at: string;\n  id: number;\n  object: \"kanji\";\n  url: string;\n}\n\ninterface KanjiAssignmentData {\n  data: {\n    available_at: string | null;\n    burned_at: string | null;\n    created_at: string;\n    hidden: boolean;\n    passed_at: string | null;\n    resurrected_at: string | null;\n    srs_stage: number;\n    started_at: string;\n    subject_id: number;\n    subject_type: string;\n    unlocked_at: string | null;\n  };\n  data_updated_at: string;\n  id: number;\n  object: \"assignment\";\n  url: string;\n}\n\nexport interface Kanji {\n  id: number;\n  character: string;\n  url: string;\n  level: number;\n  meanings: string[];\n  similarIds: number[];\n}\n\ninterface QuestionState {\n  currentKanji: Kanji;\n  currentSimilarKanji: Kanji[];\n  answered: boolean;\n  correct: boolean | null;\n  validKanji: Kanji[] | number[]; // kanji[] if level mode, number[] if srs mode\n}\n\nconst initialState: QuestionState = {\n  currentKanji: {\n    id: 0,\n    character: \"\",\n    url: \"\",\n    level: 0,\n    meanings: [],\n    similarIds: [],\n  },\n  currentSimilarKanji: [],\n  answered: false,\n  correct: null,\n  validKanji: [],\n};\n\nconst questionSlice = createSlice({\n  name: \"question\",\n  initialState,\n  reducers: {\n    setCurrentKanji: (state, action) => {\n      // state.currentKanji = action.payload;\n\n      // // remove currentKanji from validKanji\n      // const index = state.validKanji.findIndex((kanji: Kanji | number) =>\n      //   typeof kanji === \"number\"\n      //     ? kanji === action.payload\n      //     : kanji.id === action.payload.id\n      // );\n\n      // state.validKanji = state.validKanji.filter((kanji: Kanji | number) =>\n      //   typeof kanji === \"number\"\n      //     ? kanji !== index\n      //     : kanji.id !== index\n      // );\n\n      // remove previous currentKanji from validKanji, if it exists\n      if (state.validKanji.length > 0) {\n        state.validKanji = (state.validKanji as (Kanji | number)[]).filter(\n          (kanji: Kanji | number) =>\n            typeof kanji === \"number\"\n              ? kanji !== state.currentKanji.id\n              : kanji.id !== state.currentKanji.id\n        ) as Kanji[];\n      }\n\n      state.currentKanji = action.payload;\n    },\n    setSimilarKanji: (state, action) => {\n      state.currentSimilarKanji = action.payload;\n    },\n    setAnswered: (state, action) => {\n      state.answered = action.payload;\n    },\n    setCorrect: (state, action) => {\n      state.correct = action.payload;\n    },\n    setValidKanji: (state, action) => {\n      if (current(state).validKanji.length === 0) {\n        state.validKanji = action.payload;\n      } else {\n        state.validKanji = [...current(state).validKanji, action.payload];\n      }\n    },\n    // removeValidKanji: (state, action) => {\n    //   const index = action.payload;\n    //   state.validKanji = state.validKanji.splice(index, 1);\n    // },\n  },\n});\n\nexport const {\n  setCurrentKanji,\n  setSimilarKanji,\n  setAnswered,\n  setCorrect,\n  setValidKanji,\n  // removeValidKanji,\n} = questionSlice.actions;\n\nexport const getSimilarKanji = (similarIds: number[]) => {\n  return async (dispatch: any, useState: any) => {\n    const apiKey = useState().user.apiKey;\n    let ids = [...similarIds]; // copy array\n\n    // if more than 3 similar kanji, pick 3 random ones\n    if (ids.length > 3) {\n      ids.sort(() => Math.random() - 0.5); // randomize array\n      ids = ids.slice(0, 3); // take first 3 elements\n    }\n\n    let kanjiOptions = [useState().question.currentKanji];\n\n    const getSimilarKanji = async (id: number, index: number) => {\n      await axios\n        .get(`https://api.wanikani.com/v2/subjects/${id}`, {\n          headers: {\n            Authorization: `Bearer ${apiKey}`,\n          },\n        })\n        .then((res) => {\n          // console.log(res.data, index);\n          const kanji = {\n            id: res.data.id,\n            character: res.data.data.characters,\n            url: res.data.data.document_url,\n            level: res.data.data.level,\n            meanings: res.data.data.meanings.map(\n              (meaning: { meaning: string }) => meaning.meaning\n            ),\n            similarIds: res.data.data.visually_similar_subject_ids,\n          };\n\n          kanjiOptions = [...kanjiOptions, kanji];\n        });\n    };\n\n    // get similar kanji for each id\n    for (let i = 0; i < ids.length; i++) {\n      await getSimilarKanji(ids[i], i);\n    }\n\n    // randomize kanjiOptions\n    kanjiOptions = kanjiOptions.sort(() => Math.random() - 0.5);\n\n    dispatch(setSimilarKanji(kanjiOptions));\n  };\n};\n\nexport const pickKanji = () => {\n  return async (dispatch: any, useState: any) => {\n    let validKanji = useState().question.validKanji;\n    const getRandomKanjiIndex = () =>\n      Math.floor(Math.random() * validKanji.length);\n\n    let currentKanjiIndex = getRandomKanjiIndex();\n\n    console.log(\"validKanji\", validKanji, currentKanjiIndex);\n\n    const apiKey = useState().user.apiKey;\n\n    if (validKanji[currentKanjiIndex].character) {\n      // already have full kanji object\n      dispatch(setCurrentKanji(validKanji[currentKanjiIndex]));\n      dispatch(getSimilarKanji(validKanji[currentKanjiIndex].similarIds));\n    } else {\n      // recursively fetch kanji data until we have a kanji object with visually_similar_subject_ids > 1\n      const fetchKanji = async (id: number) => {\n        await axios\n          .get(`https://api.wanikani.com/v2/subjects/${id}`, {\n            headers: {\n              Authorization: `Bearer ${apiKey}`,\n            },\n          })\n          .then((res) => {\n            console.log(\"fetched:\", res.data);\n            // if kanji has visually_similar_subject_ids > 0, set currentKanji and get similar kanji\n            if (res.data.data.visually_similar_subject_ids.length > 0) {\n              const kanji = {\n                id: res.data.id,\n                character: res.data.data.characters,\n                url: res.data.data.document_url,\n                level: res.data.data.level,\n                meanings: res.data.data.meanings.map(\n                  (meaning: { meaning: string }) => meaning.meaning\n                ),\n                similarIds: res.data.data.visually_similar_subject_ids,\n              };\n              dispatch(setCurrentKanji(kanji));\n              dispatch(getSimilarKanji(kanji.similarIds));\n            } else {\n              // if kanji does not have visually_similar_subject_ids > 0, fetch another kanji\n              currentKanjiIndex = getRandomKanjiIndex();\n              console.log(\n                \"fetching another kanji\",\n                currentKanjiIndex,\n                validKanji\n              );\n              // remove currentKanji from validKanji\n              // validKanji = validKanji.filter((kanji: Kanji | number) => {\n              //   return typeof kanji === \"number\"\n              //     ? kanji !== id\n              //     : kanji.id !== id;\n              // });\n              fetchKanji(validKanji[currentKanjiIndex]);\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      };\n      fetchKanji(validKanji[currentKanjiIndex]);\n    }\n  };\n};\n\nexport const answerQuestion = (selectedKanji: Kanji) => {\n  return async (dispatch: any, useState: any) => {\n    const answer = useState().question.currentKanji;\n\n    dispatch(setAnswered(true));\n\n    if (selectedKanji.id === answer.id) {\n      dispatch(setCorrect(true));\n    } else {\n      dispatch(setCorrect(false));\n    }\n  };\n};\n\nexport const nextQuestion = () => {\n  return async (dispatch: any) => {\n    // console.log(\"next question 2\");\n    dispatch(setAnswered(false));\n    dispatch(setCorrect(null));\n    dispatch(pickKanji());\n  };\n};\n\nexport const initStudyByLevel = (selectedLevels: string) => {\n  return async (dispatch: any, useState: any) => {\n    const apiKey = useState().user.apiKey;\n\n    // recursively fetch all pages of kanji ids\n    const fetchIds = async (url: string | null) => {\n      if (url) {\n        await axios\n          .get(url, {\n            headers: {\n              Authorization: `Bearer ${apiKey}`,\n            },\n          })\n          .then((res) => {\n            console.log(\"fetched:\", res.data);\n\n            dispatch(\n              setValidKanji(\n                res.data.data\n                  .filter(\n                    (kanji: KanjiSubjectData) =>\n                      kanji.data.visually_similar_subject_ids.length > 1\n                  )\n                  .map((kanji: KanjiSubjectData) => {\n                    return {\n                      id: kanji.id,\n                      character: kanji.data.characters,\n                      url: kanji.url,\n                      level: kanji.data.level,\n                      meanings: kanji.data.meanings.map(\n                        (meaning) => meaning.meaning\n                      ),\n                      similarIds: kanji.data.visually_similar_subject_ids,\n                    };\n                  })\n              )\n            );\n\n            if (\n              res.data.total_count > res.data.pages.per_page &&\n              res.data.pages.next_url\n            ) {\n              console.log(\"fetching next page\");\n              fetchIds(res.data.pages.next_url);\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      }\n    };\n\n    await fetchIds(\n      `https://api.wanikani.com/v2/subjects?types=kanji&started=true&levels=${selectedLevels}`\n    );\n\n    dispatch(pickKanji());\n  };\n};\n\nexport const initStudyBySrs = (selectedStage: string) => {\n  return async (dispatch: any, useState: any) => {\n    const apiKey = useState().user.apiKey;\n    // recursively fetch all pages of kanji ids\n    const fetchIds = async (url: string | null) => {\n      if (url) {\n        await axios\n          .get(url, {\n            headers: {\n              Authorization: `Bearer ${apiKey}`,\n            },\n          })\n          .then((res) => {\n            console.log(\"fetched:\", res.data);\n\n            dispatch(\n              setValidKanji(\n                res.data.data\n                  .filter(\n                    (kanji: KanjiAssignmentData) =>\n                      kanji.data.subject_type === \"kanji\"\n                  )\n                  .map((kanji: KanjiAssignmentData) => kanji.data.subject_id)\n              )\n            );\n\n            if (\n              res.data.total_count > res.data.pages.per_page &&\n              res.data.pages.next_url\n            ) {\n              console.log(\"fetching next page\");\n              fetchIds(res.data.pages.next_url);\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      }\n    };\n    await fetchIds(\n      `https://api.wanikani.com/v2/assignments?srs_stages=${selectedStage}`\n    );\n\n    dispatch(pickKanji());\n  };\n};\n\nexport default questionSlice.reducer;\n// holds selected kanji, possible answers, answer, etc\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}