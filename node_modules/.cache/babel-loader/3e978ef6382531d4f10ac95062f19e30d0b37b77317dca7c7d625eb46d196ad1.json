{"ast":null,"code":"import { createSlice, current } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  currentKanji: {\n    id: 0,\n    character: \"\",\n    url: \"\",\n    level: 0,\n    meanings: [],\n    similarIds: []\n  },\n  currentSimilarKanji: [],\n  answered: false,\n  correct: null,\n  validKanji: []\n};\nconst questionSlice = createSlice({\n  name: \"question\",\n  initialState,\n  reducers: {\n    setCurrentKanji: (state, action) => {\n      state.currentKanji = action.payload;\n\n      // remove currentKanji from validKanji\n      // const index = state.validKanji.findIndex(\n      //   (kanji: Kanji) => (typeof Kanji === \"object\" ? kanji.id : kanji) === action.payload.id\n      // );\n    },\n    setSimilarKanji: (state, action) => {\n      state.currentSimilarKanji = action.payload;\n    },\n    setAnswered: (state, action) => {\n      state.answered = action.payload;\n    },\n    setCorrect: (state, action) => {\n      state.correct = action.payload;\n    },\n    setValidKanji: (state, action) => {\n      if (current(state).validKanji.length === 0) {\n        state.validKanji = action.payload;\n      } else {\n        state.validKanji = [...current(state).validKanji, action.payload];\n      }\n    }\n    // removeValidKanji: (state, action) => {\n    //   const index = action.payload;\n    //   state.validKanji = state.validKanji.splice(index, 1);\n    // },\n  }\n});\nexport const {\n  setCurrentKanji,\n  setSimilarKanji,\n  setAnswered,\n  setCorrect,\n  setValidKanji\n  // removeValidKanji,\n} = questionSlice.actions;\nexport const getSimilarKanji = similarIds => {\n  var _s = $RefreshSig$();\n  return _s(async (dispatch, useState) => {\n    _s();\n    const apiKey = useState().user.apiKey;\n    let ids = [...similarIds]; // copy array\n\n    // if more than 3 similar kanji, pick 3 random ones\n    if (ids.length > 3) {\n      ids.sort(() => Math.random() - 0.5); // randomize array\n      ids = ids.slice(0, 3); // take first 3 elements\n    }\n    let kanjiOptions = [useState().question.currentKanji];\n    const getSimilarKanji = async (id, index) => {\n      await axios.get(`https://api.wanikani.com/v2/subjects/${id}`, {\n        headers: {\n          Authorization: `Bearer ${apiKey}`\n        }\n      }).then(res => {\n        // console.log(res.data, index);\n        const kanji = {\n          id: res.data.id,\n          character: res.data.data.characters,\n          url: res.data.data.document_url,\n          level: res.data.data.level,\n          meanings: res.data.data.meanings.map(meaning => meaning.meaning),\n          similarIds: res.data.data.visually_similar_subject_ids\n        };\n        kanjiOptions = [...kanjiOptions, kanji];\n      });\n    };\n\n    // get similar kanji for each id\n    for (let i = 0; i < ids.length; i++) {\n      await getSimilarKanji(ids[i], i);\n    }\n\n    // randomize kanjiOptions\n    kanjiOptions = kanjiOptions.sort(() => Math.random() - 0.5);\n    dispatch(setSimilarKanji(kanjiOptions));\n  }, \"4eLOaIE0Yl15ohhrrvSgicSmGzk=\");\n};\nexport const pickKanji = () => {\n  var _s2 = $RefreshSig$();\n  return _s2(async (dispatch, useState) => {\n    _s2();\n    // const validKanji = useState().question.validKanji;\n    // const currentKanjiIndex = Math.floor(Math.random() * validKanji.length);\n    // console.log(currentKanjiIndex, validKanji[currentKanjiIndex]);\n\n    // dispatch(setCurrentKanji(validKanji[currentKanjiIndex]));\n    // dispatch(removeValidKanji(currentKanjiIndex));\n\n    // dispatch(getSimilarKanji(validKanji[currentKanjiIndex].similarIds));\n\n    const validKanji = useState().question.validKanji;\n    const currentKanjiIndex = Math.floor(Math.random() * validKanji.length);\n    dispatch(setCurrentKanji(validKanji[currentKanjiIndex]));\n    dispatch(getSimilarKanji(validKanji[currentKanjiIndex].similarIds));\n  }, \"VhlnxxH3xh7Qs17KADUJ8wvRSZs=\");\n};\nexport const answerQuestion = selectedKanji => {\n  var _s3 = $RefreshSig$();\n  return _s3(async (dispatch, useState) => {\n    _s3();\n    const answer = useState().question.currentKanji;\n    dispatch(setAnswered(true));\n    if (selectedKanji.id === answer.id) {\n      dispatch(setCorrect(true));\n    } else {\n      dispatch(setCorrect(false));\n    }\n  }, \"VhlnxxH3xh7Qs17KADUJ8wvRSZs=\");\n};\nexport const nextQuestion = () => {\n  return async dispatch => {\n    // console.log(\"next question 2\");\n    dispatch(setAnswered(false));\n    dispatch(setCorrect(null));\n    dispatch(pickKanji());\n  };\n};\nexport const initStudyByLevel = selectedLevels => {\n  var _s4 = $RefreshSig$();\n  return _s4(async (dispatch, useState) => {\n    _s4();\n    const apiKey = useState().user.apiKey;\n\n    // recursively fetch all pages of kanji ids\n    const fetchIds = async url => {\n      if (url) {\n        await axios.get(url, {\n          headers: {\n            Authorization: `Bearer ${apiKey}`\n          }\n        }).then(res => {\n          console.log(\"fetched:\", res.data);\n          dispatch(setValidKanji(res.data.data.filter(kanji => kanji.data.visually_similar_subject_ids.length > 1).map(kanji => {\n            return {\n              id: kanji.id,\n              character: kanji.data.characters,\n              url: kanji.url,\n              level: kanji.data.level,\n              meanings: kanji.data.meanings.map(meaning => meaning.meaning),\n              similarIds: kanji.data.visually_similar_subject_ids\n            };\n          })));\n          if (res.data.total_count > res.data.pages.per_page && res.data.pages.next_url) {\n            console.log(\"fetching next page\");\n            fetchIds(res.data.pages.next_url);\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    };\n    await fetchIds(`https://api.wanikani.com/v2/subjects?types=kanji&started=true&levels=${selectedLevels}`);\n    dispatch(pickKanji());\n  }, \"VhlnxxH3xh7Qs17KADUJ8wvRSZs=\");\n};\nexport const initStudyBySrs = selectedStage => {\n  var _s5 = $RefreshSig$();\n  return _s5(async (dispatch, useState) => {\n    _s5();\n    const apiKey = useState().user.apiKey;\n    // recursively fetch all pages of kanji ids\n    const fetchIds = async url => {\n      if (url) {\n        await axios.get(url, {\n          headers: {\n            Authorization: `Bearer ${apiKey}`\n          }\n        }).then(res => {\n          console.log(\"fetched:\", res.data);\n          dispatch(setValidKanji(res.data.data.filter(kanji => kanji.data.subject_type === \"kanji\").map(kanji => kanji.data.subject_id)));\n          if (res.data.total_count > res.data.pages.per_page && res.data.pages.next_url) {\n            console.log(\"fetching next page\");\n            fetchIds(res.data.pages.next_url);\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    };\n    await fetchIds(`https://api.wanikani.com/v2/assignments?srs_stages=${selectedStage}`);\n    dispatch(pickKanji());\n  }, \"VhlnxxH3xh7Qs17KADUJ8wvRSZs=\");\n};\nexport default questionSlice.reducer;\n// holds selected kanji, possible answers, answer, etc","map":{"version":3,"names":["createSlice","current","axios","initialState","currentKanji","id","character","url","level","meanings","similarIds","currentSimilarKanji","answered","correct","validKanji","questionSlice","name","reducers","setCurrentKanji","state","action","payload","setSimilarKanji","setAnswered","setCorrect","setValidKanji","length","actions","getSimilarKanji","_s","$RefreshSig$","dispatch","useState","apiKey","user","ids","sort","Math","random","slice","kanjiOptions","question","index","get","headers","Authorization","then","res","kanji","data","characters","document_url","map","meaning","visually_similar_subject_ids","i","pickKanji","_s2","currentKanjiIndex","floor","answerQuestion","selectedKanji","_s3","answer","nextQuestion","initStudyByLevel","selectedLevels","_s4","fetchIds","console","log","filter","total_count","pages","per_page","next_url","catch","err","initStudyBySrs","selectedStage","_s5","subject_type","subject_id","reducer"],"sources":["/Users/smanor/Development/code/personal/wk-similar/src/reducers/QuestionReducer.ts"],"sourcesContent":["import { createSlice, current } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\ninterface KanjiSubjectData {\n  data: {\n    amalgamation_subject_ids: number[];\n    auxiliary_meanings: [\n      {\n        meaning: string;\n        type: string;\n      }\n    ];\n    characters: string;\n    component_subject_ids: number[];\n    created_at: string | null;\n    document_url: string;\n    hidden_at: string | null;\n    lesson_position: number;\n    level: number;\n    meaning_hint: string;\n    meaning_mnemonic: string;\n    meanings: [\n      {\n        meaning: string;\n        primary: boolean;\n        accepted_answer: boolean;\n      }\n    ];\n    reading_hint: string;\n    reading_mnemonic: string;\n    readings: [\n      {\n        reading: string;\n        primary: boolean;\n        accepted_answer: boolean;\n        type: string;\n      }\n    ];\n    slug: string;\n    visually_similar_subject_ids: number[];\n  };\n  data_updated_at: string;\n  id: number;\n  object: \"kanji\";\n  url: string;\n}\n\ninterface KanjiAssignmentData {\n  data: {\n    available_at: string | null;\n    burned_at: string | null;\n    created_at: string;\n    hidden: boolean;\n    passed_at: string | null;\n    resurrected_at: string | null;\n    srs_stage: number;\n    started_at: string;\n    subject_id: number;\n    subject_type: string;\n    unlocked_at: string | null;\n  };\n  data_updated_at: string;\n  id: number;\n  object: \"assignment\";\n  url: string;\n}\n\nexport interface Kanji {\n  id: number;\n  character: string;\n  url: string;\n  level: number;\n  meanings: string[];\n  similarIds: number[];\n}\n\ninterface QuestionState {\n  currentKanji: Kanji;\n  currentSimilarKanji: Kanji[];\n  answered: boolean;\n  correct: boolean | null;\n  validKanji: Kanji[] | number[]; // kanji[] if level mode, number[] if srs mode\n}\n\nconst initialState: QuestionState = {\n  currentKanji: {\n    id: 0,\n    character: \"\",\n    url: \"\",\n    level: 0,\n    meanings: [],\n    similarIds: [],\n  },\n  currentSimilarKanji: [],\n  answered: false,\n  correct: null,\n  validKanji: [],\n};\n\nconst questionSlice = createSlice({\n  name: \"question\",\n  initialState,\n  reducers: {\n    setCurrentKanji: (state, action) => {\n      state.currentKanji = action.payload;\n\n      // remove currentKanji from validKanji\n      // const index = state.validKanji.findIndex(\n      //   (kanji: Kanji) => (typeof Kanji === \"object\" ? kanji.id : kanji) === action.payload.id\n      // );\n    },\n    setSimilarKanji: (state, action) => {\n      state.currentSimilarKanji = action.payload;\n    },\n    setAnswered: (state, action) => {\n      state.answered = action.payload;\n    },\n    setCorrect: (state, action) => {\n      state.correct = action.payload;\n    },\n    setValidKanji: (state, action) => {\n      if (current(state).validKanji.length === 0) {\n        state.validKanji = action.payload;\n      } else {\n        state.validKanji = [...current(state).validKanji, action.payload];\n      }\n    },\n    // removeValidKanji: (state, action) => {\n    //   const index = action.payload;\n    //   state.validKanji = state.validKanji.splice(index, 1);\n    // },\n  },\n});\n\nexport const {\n  setCurrentKanji,\n  setSimilarKanji,\n  setAnswered,\n  setCorrect,\n  setValidKanji,\n  // removeValidKanji,\n} = questionSlice.actions;\n\nexport const getSimilarKanji = (similarIds: number[]) => {\n  return async (dispatch: any, useState: any) => {\n    const apiKey = useState().user.apiKey;\n    let ids = [...similarIds]; // copy array\n\n    // if more than 3 similar kanji, pick 3 random ones\n    if (ids.length > 3) {\n      ids.sort(() => Math.random() - 0.5); // randomize array\n      ids = ids.slice(0, 3); // take first 3 elements\n    }\n\n    let kanjiOptions = [useState().question.currentKanji];\n\n    const getSimilarKanji = async (id: number, index: number) => {\n      await axios\n        .get(`https://api.wanikani.com/v2/subjects/${id}`, {\n          headers: {\n            Authorization: `Bearer ${apiKey}`,\n          },\n        })\n        .then((res) => {\n          // console.log(res.data, index);\n          const kanji = {\n            id: res.data.id,\n            character: res.data.data.characters,\n            url: res.data.data.document_url,\n            level: res.data.data.level,\n            meanings: res.data.data.meanings.map(\n              (meaning: { meaning: string }) => meaning.meaning\n            ),\n            similarIds: res.data.data.visually_similar_subject_ids,\n          };\n\n          kanjiOptions = [...kanjiOptions, kanji];\n        });\n    };\n\n    // get similar kanji for each id\n    for (let i = 0; i < ids.length; i++) {\n      await getSimilarKanji(ids[i], i);\n    }\n\n    // randomize kanjiOptions\n    kanjiOptions = kanjiOptions.sort(() => Math.random() - 0.5);\n\n    dispatch(setSimilarKanji(kanjiOptions));\n  };\n};\n\nexport const pickKanji = () => {\n  return async (dispatch: any, useState: any) => {\n    // const validKanji = useState().question.validKanji;\n    // const currentKanjiIndex = Math.floor(Math.random() * validKanji.length);\n    // console.log(currentKanjiIndex, validKanji[currentKanjiIndex]);\n\n    // dispatch(setCurrentKanji(validKanji[currentKanjiIndex]));\n    // dispatch(removeValidKanji(currentKanjiIndex));\n\n    // dispatch(getSimilarKanji(validKanji[currentKanjiIndex].similarIds));\n\n    const validKanji = useState().question.validKanji;\n    const currentKanjiIndex = Math.floor(Math.random() * validKanji.length);\n\n    dispatch(setCurrentKanji(validKanji[currentKanjiIndex]));\n    dispatch(getSimilarKanji(validKanji[currentKanjiIndex].similarIds));\n  };\n};\n\nexport const answerQuestion = (selectedKanji: Kanji) => {\n  return async (dispatch: any, useState: any) => {\n    const answer = useState().question.currentKanji;\n\n    dispatch(setAnswered(true));\n\n    if (selectedKanji.id === answer.id) {\n      dispatch(setCorrect(true));\n    } else {\n      dispatch(setCorrect(false));\n    }\n  };\n};\n\nexport const nextQuestion = () => {\n  return async (dispatch: any) => {\n    // console.log(\"next question 2\");\n    dispatch(setAnswered(false));\n    dispatch(setCorrect(null));\n    dispatch(pickKanji());\n  };\n};\n\nexport const initStudyByLevel = (selectedLevels: string) => {\n  return async (dispatch: any, useState: any) => {\n    const apiKey = useState().user.apiKey;\n\n    // recursively fetch all pages of kanji ids\n    const fetchIds = async (url: string | null) => {\n      if (url) {\n        await axios\n          .get(url, {\n            headers: {\n              Authorization: `Bearer ${apiKey}`,\n            },\n          })\n          .then((res) => {\n            console.log(\"fetched:\", res.data);\n\n            dispatch(\n              setValidKanji(\n                res.data.data\n                  .filter(\n                    (kanji: KanjiSubjectData) =>\n                      kanji.data.visually_similar_subject_ids.length > 1\n                  )\n                  .map((kanji: KanjiSubjectData) => {\n                    return {\n                      id: kanji.id,\n                      character: kanji.data.characters,\n                      url: kanji.url,\n                      level: kanji.data.level,\n                      meanings: kanji.data.meanings.map(\n                        (meaning) => meaning.meaning\n                      ),\n                      similarIds: kanji.data.visually_similar_subject_ids,\n                    };\n                  })\n              )\n            );\n\n            if (\n              res.data.total_count > res.data.pages.per_page &&\n              res.data.pages.next_url\n            ) {\n              console.log(\"fetching next page\");\n              fetchIds(res.data.pages.next_url);\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      }\n    };\n\n    await fetchIds(\n      `https://api.wanikani.com/v2/subjects?types=kanji&started=true&levels=${selectedLevels}`\n    );\n\n    dispatch(pickKanji());\n  };\n};\n\nexport const initStudyBySrs = (selectedStage: string) => {\n  return async (dispatch: any, useState: any) => {\n    const apiKey = useState().user.apiKey;\n    // recursively fetch all pages of kanji ids\n    const fetchIds = async (url: string | null) => {\n      if (url) {\n        await axios\n          .get(url, {\n            headers: {\n              Authorization: `Bearer ${apiKey}`,\n            },\n          })\n          .then((res) => {\n            console.log(\"fetched:\", res.data);\n\n            dispatch(\n              setValidKanji(\n                res.data.data\n                  .filter(\n                    (kanji: KanjiAssignmentData) =>\n                      kanji.data.subject_type === \"kanji\"\n                  )\n                  .map((kanji: KanjiAssignmentData) => kanji.data.subject_id)\n              )\n            );\n\n            if (\n              res.data.total_count > res.data.pages.per_page &&\n              res.data.pages.next_url\n            ) {\n              console.log(\"fetching next page\");\n              fetchIds(res.data.pages.next_url);\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      }\n    };\n    await fetchIds(\n      `https://api.wanikani.com/v2/assignments?srs_stages=${selectedStage}`\n    );\n\n    dispatch(pickKanji());\n  };\n};\n\nexport default questionSlice.reducer;\n// holds selected kanji, possible answers, answer, etc\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}