{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst questionSlice = createSlice({\n  name: \"question\",\n  initialState: {\n    kanji: {\n      character: \"\",\n      // selected kanji character\n      url: \"\",\n      // link to kanji's page on wanikani\n      level: 0,\n      // level where kanji is introduced\n      meanings: [],\n      // array of possible meanings\n      similarIds: [] // array of similar kanji ids\n    }\n  },\n  reducers: {\n    setKanji: (state, action) => {}\n  }\n});\nexport const {} = questionSlice.actions;\nexport default questionSlice.reducer;\n// holds selected kanji, possible answers, answer, etc","map":{"version":3,"names":["createSlice","questionSlice","name","initialState","kanji","character","url","level","meanings","similarIds","reducers","setKanji","state","action","actions","reducer"],"sources":["/Users/smanor/Development/code/personal/wk-similar/src/reducers/QuestionReducer.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst questionSlice = createSlice({\n  name: \"question\",\n  initialState: {\n    kanji: {\n      character: \"\", // selected kanji character\n      url: \"\", // link to kanji's page on wanikani\n      level: 0, // level where kanji is introduced\n      meanings: [] as string[], // array of possible meanings\n      similarIds: [] as number[], // array of similar kanji ids\n    },\n  },\n  reducers: {\n    setKanji: (state, action) => {},\n  },\n});\n\nexport const {} = questionSlice.actions;\n\nexport default questionSlice.reducer;\n// holds selected kanji, possible answers, answer, etc\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,aAAa,GAAGD,WAAW,CAAC;EAChCE,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZC,KAAK,EAAE;MACLC,SAAS,EAAE,EAAE;MAAE;MACfC,GAAG,EAAE,EAAE;MAAE;MACTC,KAAK,EAAE,CAAC;MAAE;MACVC,QAAQ,EAAE,EAAc;MAAE;MAC1BC,UAAU,EAAE,EAAc,CAAE;IAC9B;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK,CAAC;EAChC;AACF,CAAC,CAAC;AAEF,OAAO,MAAM,CAAC,CAAC,GAAGZ,aAAa,CAACa,OAAO;AAEvC,eAAeb,aAAa,CAACc,OAAO;AACpC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}