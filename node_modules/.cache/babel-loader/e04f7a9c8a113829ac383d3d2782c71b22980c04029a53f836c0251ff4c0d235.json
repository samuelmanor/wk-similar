{"ast":null,"code":"var _jsxFileName = \"/Users/smanor/Development/code/personal/wk-similar/src/components/Option.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setAnswered, setCorrect } from \"../reducers/QuestionReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Option = ({\n  id\n}) => {\n  _s();\n  const [kanji, setKanji] = useState({\n    id: 0,\n    character: \"\",\n    url: \"\",\n    level: 0,\n    meanings: [],\n    similarIds: []\n  });\n  const answer = useSelector(state => state.question.kanji.id);\n  const apiKey = useSelector(state => state.user.apiKey);\n  const questionAnswered = useSelector(state => state.question.answered);\n  const questionCorrect = useSelector(state => state.question.correct);\n  const dispatch = useDispatch();\n  const handleClick = () => {\n    if (!questionAnswered) {\n      dispatch(setAnswered(true));\n      if (id === answer ? true : false) {\n        dispatch(setCorrect(true));\n      } else {\n        dispatch(setCorrect(false));\n      }\n    }\n  };\n  useEffect(() => {\n    axios.get(`https://api.wanikani.com/v2/subjects/${id}`, {\n      headers: {\n        Authorization: `Bearer ${apiKey}`\n      }\n    }).then(res => {\n      setKanji({\n        id: res.data.id,\n        character: res.data.data.characters,\n        url: res.data.data.document_url,\n        level: res.data.data.level,\n        meanings: res.data.data.meanings[0].meaning,\n        similarIds: res.data.data.visually_similar_subject_ids\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [id]);\n  const bgColor = () => {\n    if (questionAnswered) {\n      if (questionCorrect) {\n        if (id === answer ? true : false) {\n          return \"green\";\n        }\n      } else {\n        return \"gray\";\n      }\n    } else {\n      return \"white\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: handleClick,\n    style: {\n      backgroundColor: bgColor()\n    },\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: kanji.character\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Option, \"JfvD4ACJzFI6NtRcHCDzzZNfjf8=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n_c = Option;\nvar _c;\n$RefreshReg$(_c, \"Option\");","map":{"version":3,"names":["React","useEffect","useState","axios","useDispatch","useSelector","setAnswered","setCorrect","jsxDEV","_jsxDEV","Option","id","_s","kanji","setKanji","character","url","level","meanings","similarIds","answer","state","question","apiKey","user","questionAnswered","answered","questionCorrect","correct","dispatch","handleClick","get","headers","Authorization","then","res","data","characters","document_url","meaning","visually_similar_subject_ids","catch","err","console","log","bgColor","onClick","style","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/smanor/Development/code/personal/wk-similar/src/components/Option.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { FC } from \"react\";\nimport { kanji } from \"../reducers/QuestionReducer\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setAnswered, setCorrect } from \"../reducers/QuestionReducer\";\n\ninterface OptionProps {\n  id: number;\n}\n\nexport const Option: FC<OptionProps> = ({ id }) => {\n  const [kanji, setKanji] = useState<kanji>({\n    id: 0,\n    character: \"\",\n    url: \"\",\n    level: 0,\n    meanings: [],\n    similarIds: [],\n  });\n  const answer = useSelector((state: any) => state.question.kanji.id);\n  const apiKey = useSelector((state: any) => state.user.apiKey);\n\n  const questionAnswered = useSelector((state: any) => state.question.answered);\n  const questionCorrect = useSelector((state: any) => state.question.correct);\n\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    if (!questionAnswered) {\n      dispatch(setAnswered(true));\n\n      if (id === answer ? true : false) {\n        dispatch(setCorrect(true));\n      } else {\n        dispatch(setCorrect(false));\n      }\n    }\n  };\n\n  useEffect(() => {\n    axios\n      .get(`https://api.wanikani.com/v2/subjects/${id}`, {\n        headers: {\n          Authorization: `Bearer ${apiKey}`,\n        },\n      })\n      .then((res) => {\n        setKanji({\n          id: res.data.id,\n          character: res.data.data.characters,\n          url: res.data.data.document_url,\n          level: res.data.data.level,\n          meanings: res.data.data.meanings[0].meaning,\n          similarIds: res.data.data.visually_similar_subject_ids,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [id]);\n\n  const bgColor = () => {\n    if (questionAnswered) {\n      if (questionCorrect) {\n        if (id === answer ? true : false) {\n          return \"green\";\n        }\n      } else {\n        return \"gray\";\n      }\n    } else {\n      return \"white\";\n    }\n  };\n\n  return (\n    <div onClick={handleClick} style={{ backgroundColor: bgColor() }}>\n      {/* <p onClick={() => console.log(id)}>option</p> */}\n      <h1>{kanji.character}</h1>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}