{"ast":null,"code":"var _jsxFileName = \"/Users/smanor/Development/code/personal/wk-similar/src/components/Question.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useAppSelector } from \"../hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Question = () => {\n  _s();\n  // const [optionIds, setOptionIds] = useState<number[]>([]);\n  const kanji = useSelector(state => state.question.currentKanji);\n  const similarKanji = useAppSelector(state => state.question.currentSimilarKanji);\n  // const questionAnswered = useSelector(\n  //   (state: { question: { answered: boolean } }) => state.question.answered\n  // );\n  // const questionCorrect = useSelector(\n  //   (state: { question: { correct: boolean } }) => state.question.correct\n  // );\n\n  /**\n   * Generates question options from selected kanji's similar kanji, and selected kanji\n   */\n  // const pickOptions = () => {\n  //   let arr = [...kanji.similarIds]; // copy array\n\n  //   // if more than 3 similar kanji, pick 3 random ones\n  //   if (arr.length > 3) {\n  //     arr.sort(() => Math.random() - 0.5); // randomize array\n  //     arr = arr.slice(0, 3); // take first 3 elements\n  //   }\n\n  //   arr.push(kanji.id); // add selected kanji to end of array\n\n  //   // randomize array\n  //   arr = arr.sort(() => Math.random() - 0.5);\n\n  //   setOptionIds(arr);\n  // };\n\n  useEffect(() => {\n    // pickOptions();\n    // console.log(\"kanji changed\");\n    console.log(similarKanji);\n  }, [kanji]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `mt-5`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Question, \"bgL+6OrvoOTeUWF/KWwMewdz4ic=\", false, function () {\n  return [useSelector, useAppSelector];\n});\n_c = Question;\n{\n  /* <button\n  onClick={() => nextQuestion()}\n  className={`phone:text-8xl tablet:text-9xl w-fit mx-auto ${\n  questionAnswered ? \"text-text\" : \"text-background\"\n  }`}\n  disabled={!questionAnswered}\n  >\n  →\n  </button> */\n}\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","useEffect","useSelector","useAppSelector","jsxDEV","_jsxDEV","Question","_s","kanji","state","question","currentKanji","similarKanji","currentSimilarKanji","console","log","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/smanor/Development/code/personal/wk-similar/src/components/Question.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { FC } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Kanji } from \"../reducers/QuestionReducer\";\nimport { Option } from \"./Option\";\nimport { useAppSelector } from \"../hooks\";\n\ninterface QuestionProps {}\n\nexport const Question: FC<QuestionProps> = () => {\n  // const [optionIds, setOptionIds] = useState<number[]>([]);\n  const kanji = useSelector(\n    (state: { question: { currentKanji: Kanji } }) =>\n      state.question.currentKanji\n  );\n  const similarKanji = useAppSelector(\n    (state) => state.question.currentSimilarKanji\n  );\n  // const questionAnswered = useSelector(\n  //   (state: { question: { answered: boolean } }) => state.question.answered\n  // );\n  // const questionCorrect = useSelector(\n  //   (state: { question: { correct: boolean } }) => state.question.correct\n  // );\n\n  /**\n   * Generates question options from selected kanji's similar kanji, and selected kanji\n   */\n  // const pickOptions = () => {\n  //   let arr = [...kanji.similarIds]; // copy array\n\n  //   // if more than 3 similar kanji, pick 3 random ones\n  //   if (arr.length > 3) {\n  //     arr.sort(() => Math.random() - 0.5); // randomize array\n  //     arr = arr.slice(0, 3); // take first 3 elements\n  //   }\n\n  //   arr.push(kanji.id); // add selected kanji to end of array\n\n  //   // randomize array\n  //   arr = arr.sort(() => Math.random() - 0.5);\n\n  //   setOptionIds(arr);\n  // };\n\n  useEffect(() => {\n    // pickOptions();\n    // console.log(\"kanji changed\");\n    console.log(similarKanji);\n  }, [kanji]);\n\n  return (\n    <div className={`mt-5`}>\n      {/* <div onClick={() => console.log(similarKanji)}>test</div>\n      <div className=\"flex flex-col justify-center items-center\">\n        <h2 className=\"phone:text-2xl tablet:text-3xl select-none font-body text-text mb-2\">\n          select the kanji that means\n        </h2>\n        <h1 className=\"phone:text-5xl tablet:text-6xl font-body text-text mb-1 lowercase\">\n          {kanji.meanings[0]}\n        </h1>\n        <h3 className=\"phone:text-2xl tablet: text-4xl font-body text-text lowercase\">\n          {kanji.meanings.map((meaning: string, i: number) => {\n            if (i === 0) {\n              return null;\n            } else if (i === kanji.meanings.length - 1) {\n              return meaning;\n            } else {\n              return meaning + \", \";\n            }\n          })}\n        </h3>\n      </div>\n      <div className=\"grid phone:grid-cols-1 tablet:grid-cols-2 phone:gap-4 tablet:gap-8 w-fit mx-auto my-4\">\n        {optionIds.map((id: number, i: number) => (\n          <div className=\"w-52\" key={`option-${id}`}>\n            <Option key={id} id={id} index={i} />\n          </div>\n        ))}\n      </div> */}\n    </div>\n  );\n};\n\n{\n  /* <button\nonClick={() => nextQuestion()}\nclassName={`phone:text-8xl tablet:text-9xl w-fit mx-auto ${\n  questionAnswered ? \"text-text\" : \"text-background\"\n}`}\ndisabled={!questionAnswered}\n>\n→\n</button> */\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAkB,OAAO;AAElD,SAASC,WAAW,QAAQ,aAAa;AAGzC,SAASC,cAAc,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI1C,OAAO,MAAMC,QAA2B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/C;EACA,MAAMC,KAAK,GAAGN,WAAW,CACtBO,KAA4C,IAC3CA,KAAK,CAACC,QAAQ,CAACC,YACnB,CAAC;EACD,MAAMC,YAAY,GAAGT,cAAc,CAChCM,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAACG,mBAC5B,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;;EAEA;AACF;AACA;EACE;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;;EAEA;EACA;;EAEAZ,SAAS,CAAC,MAAM;IACd;IACA;IACAa,OAAO,CAACC,GAAG,CAACH,YAAY,CAAC;EAC3B,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEX,oBACEH,OAAA;IAAKW,SAAS,EAAE;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OA4BlB,CAAC;AAEV,CAAC;AAACb,EAAA,CAzEWD,QAA2B;EAAA,QAExBJ,WAAW,EAIJC,cAAc;AAAA;AAAAkB,EAAA,GANxBf,QAA2B;AA2ExC;EACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARE;AASD,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}